ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_MOTOR.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_MOTOR_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_MOTOR_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_MOTOR_Enable, %function
  23              	PWM_MOTOR_Enable:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_MOTOR.c"
   1:.\Generated_Source\PSoC4/PWM_MOTOR.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * File Name: PWM_MOTOR.c
   3:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
   5:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  15:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  17:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_MOTOR.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
  24:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #include "PWM_MOTOR.h"
  25:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
  26:.\Generated_Source\PSoC4/PWM_MOTOR.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #ifdef PWM_MOTOR_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_MOTOR.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #endif /* PWM_MOTOR_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
  32:.\Generated_Source\PSoC4/PWM_MOTOR.c **** uint8 PWM_MOTOR_initVar = 0u;
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
  34:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
  35:.\Generated_Source\PSoC4/PWM_MOTOR.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Function Name: PWM_MOTOR_Start
  37:.\Generated_Source\PSoC4/PWM_MOTOR.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  39:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  44:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  47:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  50:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  PWM_MOTOR_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  54:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_MOTOR.c **** void PWM_MOTOR_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_MOTOR.c **** {
  57:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     if(PWM_MOTOR_initVar == 0u)
  59:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
  60:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_Init();
  61:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_initVar = 1u;
  62:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
  63:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     PWM_MOTOR_Enable();
  64:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
  65:.\Generated_Source\PSoC4/PWM_MOTOR.c **** }
  66:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
  67:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
  68:.\Generated_Source\PSoC4/PWM_MOTOR.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Function Name: PWM_MOTOR_Init
  70:.\Generated_Source\PSoC4/PWM_MOTOR.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  72:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  PWM_MOTOR_Start().
  76:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  77:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  80:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
  83:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_MOTOR.c **** void PWM_MOTOR_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_MOTOR.c **** {
  86:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UsingFixedFunction || PWM_MOTOR_UseControl)
  87:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UsingFixedFunction || PWM_MOTOR_UseControl) */
  89:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if(!PWM_MOTOR_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if(PWM_MOTOR_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             uint8 PWM_MOTOR_interruptState;
  94:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (!PWM_MOTOR_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
  97:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_CONTROL |= PWM_MOTOR_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if (PWM_MOTOR_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_CONTROL |= PWM_MOTOR_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 104:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         ctrl = PWM_MOTOR_CONTROL3 & ((uint8 )(~PWM_MOTOR_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_CONTROL3 = ctrl | PWM_MOTOR_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 107:.\Generated_Source\PSoC4/PWM_MOTOR.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_RT1 &= ((uint8)(~PWM_MOTOR_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_RT1 |= PWM_MOTOR_SYNC;
 110:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 111:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_RT1 &= ((uint8)(~PWM_MOTOR_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_RT1 |= PWM_MOTOR_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 115:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #elif (PWM_MOTOR_UseControl)
 116:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         ctrl = PWM_MOTOR_CONTROL & ((uint8)(~PWM_MOTOR_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 ((uint8)(~PWM_MOTOR_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_CONTROL = ctrl | PWM_MOTOR_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                    PWM_MOTOR_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 123:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (!PWM_MOTOR_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if (PWM_MOTOR_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_AUX_CONTROLDP0 |= (PWM_MOTOR_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else /* (PWM_MOTOR_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_AUX_CONTROLDP0 |= (PWM_MOTOR_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_AUX_CONTROLDP1 |= (PWM_MOTOR_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 133:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_WriteCounter(PWM_MOTOR_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (!PWM_MOTOR_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 136:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     PWM_MOTOR_WritePeriod(PWM_MOTOR_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 138:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if (PWM_MOTOR_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_WriteCompare(PWM_MOTOR_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_WriteCompare1(PWM_MOTOR_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_WriteCompare2(PWM_MOTOR_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 145:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if (PWM_MOTOR_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_WriteKillTime(PWM_MOTOR_MinimumKillTime);
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 149:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if (PWM_MOTOR_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_WriteDeadTime(PWM_MOTOR_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 153:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UseStatus || PWM_MOTOR_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_SetInterruptMode(PWM_MOTOR_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UseStatus || PWM_MOTOR_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 157:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_GLOBAL_ENABLE |= PWM_MOTOR_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_CONTROL2 |= PWM_MOTOR_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if(PWM_MOTOR_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 165:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_STATUS_AUX_CTRL |= PWM_MOTOR_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 171:.\Generated_Source\PSoC4/PWM_MOTOR.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             CyExitCriticalSection(PWM_MOTOR_interruptState);
 173:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 174:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Clear the FIFO to enable the PWM_MOTOR_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_MOTOR.c **** }
 180:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 181:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 182:.\Generated_Source\PSoC4/PWM_MOTOR.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Function Name: PWM_MOTOR_Enable
 184:.\Generated_Source\PSoC4/PWM_MOTOR.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 186:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 189:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 192:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 195:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 198:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_MOTOR.c **** void PWM_MOTOR_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_MOTOR.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 5


 202:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_GLOBAL_ENABLE |= PWM_MOTOR_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_GLOBAL_STBY_ENABLE |= PWM_MOTOR_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 207:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UseControl || PWM_MOTOR_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_CONTROL |= PWM_MOTOR_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UseControl || PWM_MOTOR_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_MOTOR.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 72000F40 		.word	1074724978
  41              		.cfi_endproc
  42              	.LFE4:
  43              		.size	PWM_MOTOR_Enable, .-PWM_MOTOR_Enable
  44              		.section	.text.PWM_MOTOR_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWM_MOTOR_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWM_MOTOR_Stop, %function
  50              	PWM_MOTOR_Stop:
  51              	.LFB5:
 212:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 213:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 214:.\Generated_Source\PSoC4/PWM_MOTOR.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Function Name: PWM_MOTOR_Stop
 216:.\Generated_Source\PSoC4/PWM_MOTOR.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 218:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 222:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 225:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 228:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 232:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_MOTOR.c **** void PWM_MOTOR_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_MOTOR.c **** {
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UseControl || PWM_MOTOR_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_CONTROL &= ((uint8)(~PWM_MOTOR_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UseControl || PWM_MOTOR_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 239:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_GLOBAL_ENABLE &= ((uint8)(~PWM_MOTOR_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_MOTOR_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_MOTOR.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 72000F40 		.word	1074724978
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	PWM_MOTOR_Stop, .-PWM_MOTOR_Stop
  70              		.section	.text.PWM_MOTOR_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_MOTOR_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_MOTOR_WriteCounter, %function
  76              	PWM_MOTOR_WriteCounter:
  77              	.LFB6:
 245:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 246:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #if (PWM_MOTOR_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 249:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 250:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Function Name: PWM_MOTOR_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 254:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 258:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 262:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 265:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *******************************************************************************/
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 7


 266:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         void PWM_MOTOR_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         {
 268:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #if(PWM_MOTOR_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 270:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 #if(0 != PWM_MOTOR_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTOR_CTRL_CMPMODE
 272:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 #endif /* (0 != PWM_MOTOR_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 276:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 PWM_MOTOR_CONTROL3 &= ((uint8)(~PWM_MOTOR_CTRL_CMPMODE1_MASK)); /*Clear Existing Da
 277:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 PWM_MOTOR_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 279:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #elif (PWM_MOTOR_UseControl)
 280:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 281:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 #if(0 != PWM_MOTOR_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_MOTOR_CTRL_CMPMOD
 283:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                                 PWM_MOTOR_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                     uint8 comparemode1masked = comparemode & PWM_MOTOR_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 #endif /* (0 != PWM_MOTOR_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 288:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 #if(0 != PWM_MOTOR_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_MOTOR_CTRL_CMPMOD
 290:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                                PWM_MOTOR_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                     uint8 comparemode2masked = comparemode & PWM_MOTOR_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 #endif /* (0 != PWM_MOTOR_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 295:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 PWM_MOTOR_CONTROL &= ((uint8)(~(PWM_MOTOR_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                             PWM_MOTOR_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 PWM_MOTOR_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 300:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #endif /* (PWM_MOTOR_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         }
 304:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* PWM_MOTOR_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 306:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 308:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 310:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 311:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Function Name: PWM_MOTOR_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 315:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 318:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 322:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Return:
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 8


 323:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 325:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         void PWM_MOTOR_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         {
 328:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #if(0 != PWM_MOTOR_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTOR_CTRL_CMPMODE1_SH
 330:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                            PWM_MOTOR_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 uint8 comparemodemasked = comparemode & PWM_MOTOR_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #endif /* (0 != PWM_MOTOR_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 335:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #if (PWM_MOTOR_UseControl)
 336:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 PWM_MOTOR_CONTROL &= ((uint8)(~PWM_MOTOR_CTRL_CMPMODE1_MASK)); /*Clear existing mod
 337:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 PWM_MOTOR_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #endif /* (PWM_MOTOR_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         }
 340:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* PWM_MOTOR_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 342:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #if (PWM_MOTOR_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 344:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 345:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 349:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 352:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 356:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 359:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     void PWM_MOTOR_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 362:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 363:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if(0 != PWM_MOTOR_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTOR_CTRL_CMPMODE2_SHIFT)
 365:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                                  PWM_MOTOR_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             uint8 comparemodemasked = comparemode & PWM_MOTOR_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (0 != PWM_MOTOR_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 370:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if (PWM_MOTOR_UseControl)
 371:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_CONTROL &= ((uint8)(~PWM_MOTOR_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 375:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /*PWM_MOTOR_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 377:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 379:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 9


 380:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #if (!PWM_MOTOR_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 382:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 383:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 387:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 393:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 396:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 399:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 402:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     void PWM_MOTOR_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         CY_SET_REG8(PWM_MOTOR_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1870     		strb	r0, [r3]
 407:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 02000F40 		.word	1074724866
  91              		.cfi_endproc
  92              	.LFE6:
  93              		.size	PWM_MOTOR_WriteCounter, .-PWM_MOTOR_WriteCounter
  94              		.section	.text.PWM_MOTOR_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWM_MOTOR_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWM_MOTOR_ReadCounter, %function
 100              	PWM_MOTOR_ReadCounter:
 101              	.LFB7:
 408:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 409:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 410:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 10


 413:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 414:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 418:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 421:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 424:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     uint8 PWM_MOTOR_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_MOTOR.c ****           (void)CY_GET_REG8(PWM_MOTOR_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 432:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         return (CY_GET_REG8(PWM_MOTOR_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1878     		ldrb	r0, [r3]
 110 0008 C0B2     		uxtb	r0, r0
 434:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 12000F40 		.word	1074724882
 118 0010 52000F40 		.word	1074724946
 119              		.cfi_endproc
 120              	.LFE7:
 121              		.size	PWM_MOTOR_ReadCounter, .-PWM_MOTOR_ReadCounter
 122              		.section	.text.PWM_MOTOR_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWM_MOTOR_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWM_MOTOR_WritePeriod, %function
 128              	PWM_MOTOR_WritePeriod:
 129              	.LFB9:
 435:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 436:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 438:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 439:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Function Name: PWM_MOTOR_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         ********************************************************************************
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 11


 442:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 443:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 446:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 449:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *
 452:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         void PWM_MOTOR_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         {
 455:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             while(0u != (PWM_MOTOR_ReadStatusRegister() & PWM_MOTOR_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             {
 457:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 (void)PWM_MOTOR_ReadCapture();
 458:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             }
 459:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         }
 460:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 461:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* PWM_MOTOR_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 463:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #endif /* !PWM_MOTOR_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 465:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 466:.\Generated_Source\PSoC4/PWM_MOTOR.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Function Name: PWM_MOTOR_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_MOTOR.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 470:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 474:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 478:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 481:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_MOTOR.c **** void PWM_MOTOR_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC4/PWM_MOTOR.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if(PWM_MOTOR_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         CY_SET_REG16(PWM_MOTOR_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         CY_SET_REG8(PWM_MOTOR_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1870     		strb	r0, [r3]
 488:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_MOTOR.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 42000F40 		.word	1074724930
 143              		.cfi_endproc
 144              	.LFE9:
 145              		.size	PWM_MOTOR_WritePeriod, .-PWM_MOTOR_WritePeriod
 146              		.section	.text.PWM_MOTOR_WriteCompare1,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_MOTOR_WriteCompare1
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_MOTOR_WriteCompare1, %function
 152              	PWM_MOTOR_WriteCompare1:
 153              	.LFB10:
 490:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 491:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #if (PWM_MOTOR_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 493:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 494:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 498:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 505:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 508:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 511:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 515:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     void PWM_MOTOR_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 519:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if(PWM_MOTOR_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             CY_SET_REG16(PWM_MOTOR_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             CY_SET_REG8(PWM_MOTOR_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 525:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if (PWM_MOTOR_PWMMode == PWM_MOTOR__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #if(PWM_MOTOR_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 CY_SET_REG16(PWM_MOTOR_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 CY_SET_REG8(PWM_MOTOR_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #endif /* (PWM_MOTOR_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_PWMMode == PWM_MOTOR__B_PWM__DITHER) */
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 13


 532:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 533:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 534:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 535:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #else
 536:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 537:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 538:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 542:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 548:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 551:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 554:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     void PWM_MOTOR_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 154              		.loc 1 557 0
 155              		.cfi_startproc
 156              	.LVL2:
 558:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if(PWM_MOTOR_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             CY_SET_REG16(PWM_MOTOR_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             CY_SET_REG8(PWM_MOTOR_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 561 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1870     		strb	r0, [r3]
 562:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 160              		.loc 1 563 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 22000F40 		.word	1074724898
 167              		.cfi_endproc
 168              	.LFE10:
 169              		.size	PWM_MOTOR_WriteCompare1, .-PWM_MOTOR_WriteCompare1
 170              		.section	.text.PWM_MOTOR_WriteCompare2,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_MOTOR_WriteCompare2
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_MOTOR_WriteCompare2, %function
 176              	PWM_MOTOR_WriteCompare2:
 177              	.LFB11:
 564:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 14


 565:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 566:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 570:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 577:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 580:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 583:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     void PWM_MOTOR_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 178              		.loc 1 586 0
 179              		.cfi_startproc
 180              	.LVL3:
 587:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if(PWM_MOTOR_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             CY_SET_REG16(PWM_MOTOR_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             CY_SET_REG8(PWM_MOTOR_COMPARE2_LSB_PTR, compare);
 181              		.loc 1 590 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1870     		strb	r0, [r3]
 591:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 184              		.loc 1 592 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 32000F40 		.word	1074724914
 191              		.cfi_endproc
 192              	.LFE11:
 193              		.size	PWM_MOTOR_WriteCompare2, .-PWM_MOTOR_WriteCompare2
 194              		.section	.text.PWM_MOTOR_SetInterruptMode,"ax",%progbits
 195              		.align	2
 196              		.global	PWM_MOTOR_SetInterruptMode
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWM_MOTOR_SetInterruptMode, %function
 200              	PWM_MOTOR_SetInterruptMode:
 201              	.LFB12:
 593:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 595:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #if (PWM_MOTOR_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 597:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 15


 598:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 602:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 605:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 608:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 611:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     void PWM_MOTOR_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 614:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if(!PWM_MOTOR_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             CY_SET_REG8(PWM_MOTOR_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_DEADBAND_COUNT &= ((uint8)(~PWM_MOTOR_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 622:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #if(PWM_MOTOR_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 PWM_MOTOR_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_MOTOR_DEADBAND_COUNT_SH
 625:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                                     PWM_MOTOR_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 PWM_MOTOR_DEADBAND_COUNT |= deadtime & PWM_MOTOR_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #endif /* (PWM_MOTOR_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 630:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (!PWM_MOTOR_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 632:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 633:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 634:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 638:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 641:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 644:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 647:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     uint8 PWM_MOTOR_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 650:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if(!PWM_MOTOR_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             return (CY_GET_REG8(PWM_MOTOR_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 16


 655:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #if(PWM_MOTOR_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 return ((uint8)(((uint8)(PWM_MOTOR_DEADBAND_COUNT & PWM_MOTOR_DEADBAND_COUNT_MASK))
 658:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                                                            PWM_MOTOR_DEADBAND_COUNT
 659:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 return (PWM_MOTOR_DEADBAND_COUNT & PWM_MOTOR_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             #endif /* (PWM_MOTOR_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (!PWM_MOTOR_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 664:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 666:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #if (PWM_MOTOR_UseStatus || PWM_MOTOR_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 668:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 669:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 673:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 677:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 680:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 683:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     void PWM_MOTOR_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 202              		.loc 1 685 0
 203              		.cfi_startproc
 204              	.LVL4:
 686:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         CY_SET_REG8(PWM_MOTOR_STATUS_MASK_PTR, interruptMode);
 205              		.loc 1 686 0
 206 0000 014B     		ldr	r3, .L23
 207 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 208              		.loc 1 687 0
 209              		@ sp needed
 210 0004 7047     		bx	lr
 211              	.L24:
 212 0006 C046     		.align	2
 213              	.L23:
 214 0008 82000F40 		.word	1074724994
 215              		.cfi_endproc
 216              	.LFE12:
 217              		.size	PWM_MOTOR_SetInterruptMode, .-PWM_MOTOR_SetInterruptMode
 218              		.section	.text.PWM_MOTOR_ReadStatusRegister,"ax",%progbits
 219              		.align	2
 220              		.global	PWM_MOTOR_ReadStatusRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	PWM_MOTOR_ReadStatusRegister, %function
 224              	PWM_MOTOR_ReadStatusRegister:
 225              	.LFB13:
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 17


 688:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 689:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 690:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 694:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 697:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 700:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 710:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     uint8 PWM_MOTOR_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 226              		.loc 1 712 0
 227              		.cfi_startproc
 713:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         return (CY_GET_REG8(PWM_MOTOR_STATUS_PTR));
 228              		.loc 1 713 0
 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 232              		.loc 1 714 0
 233              		@ sp needed
 234 0006 7047     		bx	lr
 235              	.L27:
 236              		.align	2
 237              	.L26:
 238 0008 62000F40 		.word	1074724962
 239              		.cfi_endproc
 240              	.LFE13:
 241              		.size	PWM_MOTOR_ReadStatusRegister, .-PWM_MOTOR_ReadStatusRegister
 242              		.section	.text.PWM_MOTOR_ReadControlRegister,"ax",%progbits
 243              		.align	2
 244              		.global	PWM_MOTOR_ReadControlRegister
 245              		.code	16
 246              		.thumb_func
 247              		.type	PWM_MOTOR_ReadControlRegister, %function
 248              	PWM_MOTOR_ReadControlRegister:
 249              	.LFB14:
 715:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 716:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #endif /* (PWM_MOTOR_UseStatus || PWM_MOTOR_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 718:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 719:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #if (PWM_MOTOR_UseControl)
 720:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 18


 721:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 722:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 726:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 730:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 733:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 736:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     uint8 PWM_MOTOR_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 250              		.loc 1 738 0
 251              		.cfi_startproc
 739:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 741:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         result = CY_GET_REG8(PWM_MOTOR_CONTROL_PTR);
 252              		.loc 1 741 0
 253 0000 014B     		ldr	r3, .L29
 254 0002 1878     		ldrb	r0, [r3]
 255 0004 C0B2     		uxtb	r0, r0
 256              	.LVL5:
 742:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 257              		.loc 1 743 0
 258              		@ sp needed
 259 0006 7047     		bx	lr
 260              	.L30:
 261              		.align	2
 262              	.L29:
 263 0008 72000F40 		.word	1074724978
 264              		.cfi_endproc
 265              	.LFE14:
 266              		.size	PWM_MOTOR_ReadControlRegister, .-PWM_MOTOR_ReadControlRegister
 267              		.section	.text.PWM_MOTOR_WriteControlRegister,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_MOTOR_WriteControlRegister
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWM_MOTOR_WriteControlRegister, %function
 273              	PWM_MOTOR_WriteControlRegister:
 274              	.LFB15:
 744:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 745:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 746:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 750:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  the control register is not removed.
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 19


 753:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 754:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 761:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 764:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     void PWM_MOTOR_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 275              		.loc 1 766 0
 276              		.cfi_startproc
 277              	.LVL6:
 767:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         CY_SET_REG8(PWM_MOTOR_CONTROL_PTR, control);
 278              		.loc 1 767 0
 279 0000 014B     		ldr	r3, .L32
 280 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 281              		.loc 1 768 0
 282              		@ sp needed
 283 0004 7047     		bx	lr
 284              	.L33:
 285 0006 C046     		.align	2
 286              	.L32:
 287 0008 72000F40 		.word	1074724978
 288              		.cfi_endproc
 289              	.LFE15:
 290              		.size	PWM_MOTOR_WriteControlRegister, .-PWM_MOTOR_WriteControlRegister
 291              		.section	.text.PWM_MOTOR_ReadCapture,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_MOTOR_ReadCapture
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWM_MOTOR_ReadCapture, %function
 297              	PWM_MOTOR_ReadCapture:
 298              	.LFB16:
 769:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 770:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #endif /* (PWM_MOTOR_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 772:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 773:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #if (!PWM_MOTOR_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 775:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 776:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 780:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 783:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 20


 786:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 789:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     uint8 PWM_MOTOR_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 299              		.loc 1 791 0
 300              		.cfi_startproc
 792:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         return (CY_GET_REG8(PWM_MOTOR_CAPTURE_LSB_PTR));
 301              		.loc 1 792 0
 302 0000 014B     		ldr	r3, .L35
 303 0002 1878     		ldrb	r0, [r3]
 304 0004 C0B2     		uxtb	r0, r0
 793:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 305              		.loc 1 793 0
 306              		@ sp needed
 307 0006 7047     		bx	lr
 308              	.L36:
 309              		.align	2
 310              	.L35:
 311 0008 52000F40 		.word	1074724946
 312              		.cfi_endproc
 313              	.LFE16:
 314              		.size	PWM_MOTOR_ReadCapture, .-PWM_MOTOR_ReadCapture
 315              		.section	.text.PWM_MOTOR_ClearFIFO,"ax",%progbits
 316              		.align	2
 317              		.global	PWM_MOTOR_ClearFIFO
 318              		.code	16
 319              		.thumb_func
 320              		.type	PWM_MOTOR_ClearFIFO, %function
 321              	PWM_MOTOR_ClearFIFO:
 322              	.LFB8:
 454:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             while(0u != (PWM_MOTOR_ReadStatusRegister() & PWM_MOTOR_STATUS_FIFONEMPTY))
 323              		.loc 1 454 0
 324              		.cfi_startproc
 325 0000 08B5     		push	{r3, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             {
 329              		.loc 1 455 0
 330 0002 01E0     		b	.L38
 331              	.L39:
 457:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             }
 332              		.loc 1 457 0
 333 0004 FFF7FEFF 		bl	PWM_MOTOR_ReadCapture
 334              	.LVL7:
 335              	.L38:
 455:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             {
 336              		.loc 1 455 0
 337 0008 FFF7FEFF 		bl	PWM_MOTOR_ReadStatusRegister
 338              	.LVL8:
 339 000c C306     		lsl	r3, r0, #27
 340 000e F9D4     		bmi	.L39
 459:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 341              		.loc 1 459 0
 342              		@ sp needed
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 21


 343 0010 08BD     		pop	{r3, pc}
 344              		.cfi_endproc
 345              	.LFE8:
 346              		.size	PWM_MOTOR_ClearFIFO, .-PWM_MOTOR_ClearFIFO
 347 0012 C046     		.section	.text.PWM_MOTOR_Init,"ax",%progbits
 348              		.align	2
 349              		.global	PWM_MOTOR_Init
 350              		.code	16
 351              		.thumb_func
 352              		.type	PWM_MOTOR_Init, %function
 353              	PWM_MOTOR_Init:
 354              	.LFB3:
  85:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if (PWM_MOTOR_UsingFixedFunction || PWM_MOTOR_UseControl)
 355              		.loc 1 85 0
 356              		.cfi_startproc
 357 0000 10B5     		push	{r4, lr}
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 4, -8
 360              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                 ((uint8)(~PWM_MOTOR_CTRL_CMPMODE1_MASK));
 361              		.loc 1 117 0
 362 0002 1349     		ldr	r1, .L41
 363 0004 0B78     		ldrb	r3, [r1]
 364 0006 3F22     		mov	r2, #63
 365 0008 9343     		bic	r3, r2
 366              	.LVL9:
 119:.\Generated_Source\PSoC4/PWM_MOTOR.c ****                                    PWM_MOTOR_DEFAULT_COMPARE1_MODE;
 367              		.loc 1 119 0
 368 000a 363A     		sub	r2, r2, #54
 369 000c 1343     		orr	r3, r2
 370              	.LVL10:
 371 000e 0B70     		strb	r3, [r1]
 126:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else /* (PWM_MOTOR_Resolution == 16)*/
 372              		.loc 1 126 0
 373 0010 104C     		ldr	r4, .L41+4
 374 0012 2278     		ldrb	r2, [r4]
 375 0014 0123     		mov	r3, #1
 376 0016 1343     		orr	r3, r2
 377 0018 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (!PWM_MOTOR_UsingFixedFunction) */
 378              		.loc 1 133 0
 379 001a FF20     		mov	r0, #255
 380 001c FFF7FEFF 		bl	PWM_MOTOR_WriteCounter
 381              	.LVL11:
 136:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 382              		.loc 1 136 0
 383 0020 FF20     		mov	r0, #255
 384 0022 FFF7FEFF 		bl	PWM_MOTOR_WritePeriod
 385              	.LVL12:
 141:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             PWM_MOTOR_WriteCompare2(PWM_MOTOR_INIT_COMPARE_VALUE2);
 386              		.loc 1 141 0
 387 0026 0A20     		mov	r0, #10
 388 0028 FFF7FEFF 		bl	PWM_MOTOR_WriteCompare1
 389              	.LVL13:
 142:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UseOneCompareMode) */
 390              		.loc 1 142 0
 391 002c 0A20     		mov	r0, #10
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 22


 392 002e FFF7FEFF 		bl	PWM_MOTOR_WriteCompare2
 393              	.LVL14:
 154:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UseStatus || PWM_MOTOR_UsingFixedFunction) */
 394              		.loc 1 154 0
 395 0032 0020     		mov	r0, #0
 396 0034 FFF7FEFF 		bl	PWM_MOTOR_SetInterruptMode
 397              	.LVL15:
 167:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             /* Use the interrupt output of the status register for IRQ output */
 398              		.loc 1 167 0
 399 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 400              	.LVL16:
 169:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 401              		.loc 1 169 0
 402 003c 2278     		ldrb	r2, [r4]
 403 003e 1023     		mov	r3, #16
 404 0040 1343     		orr	r3, r2
 405 0042 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 406              		.loc 1 172 0
 407 0044 FFF7FEFF 		bl	CyExitCriticalSection
 408              	.LVL17:
 176:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UseStatus) */
 409              		.loc 1 176 0
 410 0048 FFF7FEFF 		bl	PWM_MOTOR_ClearFIFO
 411              	.LVL18:
 179:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 412              		.loc 1 179 0
 413              		@ sp needed
 414 004c 10BD     		pop	{r4, pc}
 415              	.L42:
 416 004e C046     		.align	2
 417              	.L41:
 418 0050 72000F40 		.word	1074724978
 419 0054 92000F40 		.word	1074725010
 420              		.cfi_endproc
 421              	.LFE3:
 422              		.size	PWM_MOTOR_Init, .-PWM_MOTOR_Init
 423              		.section	.text.PWM_MOTOR_Start,"ax",%progbits
 424              		.align	2
 425              		.global	PWM_MOTOR_Start
 426              		.code	16
 427              		.thumb_func
 428              		.type	PWM_MOTOR_Start, %function
 429              	PWM_MOTOR_Start:
 430              	.LFB2:
  56:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /* If not Initialized then initialize all required hardware and software */
 431              		.loc 1 56 0
 432              		.cfi_startproc
 433 0000 08B5     		push	{r3, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 3, -8
 436              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 437              		.loc 1 58 0
 438 0002 064B     		ldr	r3, .L45
 439 0004 1B78     		ldrb	r3, [r3]
 440 0006 002B     		cmp	r3, #0
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 23


 441 0008 04D1     		bne	.L44
  60:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         PWM_MOTOR_initVar = 1u;
 442              		.loc 1 60 0
 443 000a FFF7FEFF 		bl	PWM_MOTOR_Init
 444              	.LVL19:
  61:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 445              		.loc 1 61 0
 446 000e 0122     		mov	r2, #1
 447 0010 024B     		ldr	r3, .L45
 448 0012 1A70     		strb	r2, [r3]
 449              	.L44:
  63:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 450              		.loc 1 63 0
 451 0014 FFF7FEFF 		bl	PWM_MOTOR_Enable
 452              	.LVL20:
  65:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 453              		.loc 1 65 0
 454              		@ sp needed
 455 0018 08BD     		pop	{r3, pc}
 456              	.L46:
 457 001a C046     		.align	2
 458              	.L45:
 459 001c 00000000 		.word	.LANCHOR0
 460              		.cfi_endproc
 461              	.LFE2:
 462              		.size	PWM_MOTOR_Start, .-PWM_MOTOR_Start
 463              		.section	.text.PWM_MOTOR_ReadCompare1,"ax",%progbits
 464              		.align	2
 465              		.global	PWM_MOTOR_ReadCompare1
 466              		.code	16
 467              		.thumb_func
 468              		.type	PWM_MOTOR_ReadCompare1, %function
 469              	PWM_MOTOR_ReadCompare1:
 470              	.LFB17:
 794:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 795:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #endif /* (!PWM_MOTOR_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 797:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 798:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #if (PWM_MOTOR_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 800:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 801:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 805:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 809:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 812:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 815:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     uint8 PWM_MOTOR_ReadCompare(void) 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 24


 817:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 818:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #if(PWM_MOTOR_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             return ((uint8)CY_GET_REG16(PWM_MOTOR_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_MOTOR.c ****             return (CY_GET_REG8(PWM_MOTOR_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         #endif /* (PWM_MOTOR_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 824:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 825:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #else
 826:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 827:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 828:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 832:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 835:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 838:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 841:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     uint8 PWM_MOTOR_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 471              		.loc 1 843 0
 472              		.cfi_startproc
 844:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         return (CY_GET_REG8(PWM_MOTOR_COMPARE1_LSB_PTR));
 473              		.loc 1 844 0
 474 0000 014B     		ldr	r3, .L48
 475 0002 1878     		ldrb	r0, [r3]
 476 0004 C0B2     		uxtb	r0, r0
 845:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 477              		.loc 1 845 0
 478              		@ sp needed
 479 0006 7047     		bx	lr
 480              	.L49:
 481              		.align	2
 482              	.L48:
 483 0008 22000F40 		.word	1074724898
 484              		.cfi_endproc
 485              	.LFE17:
 486              		.size	PWM_MOTOR_ReadCompare1, .-PWM_MOTOR_ReadCompare1
 487              		.section	.text.PWM_MOTOR_ReadCompare2,"ax",%progbits
 488              		.align	2
 489              		.global	PWM_MOTOR_ReadCompare2
 490              		.code	16
 491              		.thumb_func
 492              		.type	PWM_MOTOR_ReadCompare2, %function
 493              	PWM_MOTOR_ReadCompare2:
 494              	.LFB18:
 846:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 847:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 848:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Function Name: PWM_MOTOR_ReadCompare2
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 25


 850:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 852:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 855:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 858:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *
 861:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     uint8 PWM_MOTOR_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     {
 495              		.loc 1 863 0
 496              		.cfi_startproc
 864:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         return (CY_GET_REG8(PWM_MOTOR_COMPARE2_LSB_PTR));
 497              		.loc 1 864 0
 498 0000 014B     		ldr	r3, .L51
 499 0002 1878     		ldrb	r0, [r3]
 500 0004 C0B2     		uxtb	r0, r0
 865:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     }
 501              		.loc 1 865 0
 502              		@ sp needed
 503 0006 7047     		bx	lr
 504              	.L52:
 505              		.align	2
 506              	.L51:
 507 0008 32000F40 		.word	1074724914
 508              		.cfi_endproc
 509              	.LFE18:
 510              		.size	PWM_MOTOR_ReadCompare2, .-PWM_MOTOR_ReadCompare2
 511              		.section	.text.PWM_MOTOR_ReadPeriod,"ax",%progbits
 512              		.align	2
 513              		.global	PWM_MOTOR_ReadPeriod
 514              		.code	16
 515              		.thumb_func
 516              		.type	PWM_MOTOR_ReadPeriod, %function
 517              	PWM_MOTOR_ReadPeriod:
 518              	.LFB19:
 866:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 867:.\Generated_Source\PSoC4/PWM_MOTOR.c **** #endif /* (PWM_MOTOR_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 869:.\Generated_Source\PSoC4/PWM_MOTOR.c **** 
 870:.\Generated_Source\PSoC4/PWM_MOTOR.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Function Name: PWM_MOTOR_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_MOTOR.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 874:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 877:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
 880:.\Generated_Source\PSoC4/PWM_MOTOR.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 26


 883:.\Generated_Source\PSoC4/PWM_MOTOR.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_MOTOR.c **** uint8 PWM_MOTOR_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_MOTOR.c **** {
 519              		.loc 1 885 0
 520              		.cfi_startproc
 886:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #if(PWM_MOTOR_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         return ((uint8)CY_GET_REG16(PWM_MOTOR_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_MOTOR.c ****         return (CY_GET_REG8(PWM_MOTOR_PERIOD_LSB_PTR));
 521              		.loc 1 889 0
 522 0000 014B     		ldr	r3, .L54
 523 0002 1878     		ldrb	r0, [r3]
 524 0004 C0B2     		uxtb	r0, r0
 890:.\Generated_Source\PSoC4/PWM_MOTOR.c ****     #endif /* (PWM_MOTOR_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_MOTOR.c **** }
 525              		.loc 1 891 0
 526              		@ sp needed
 527 0006 7047     		bx	lr
 528              	.L55:
 529              		.align	2
 530              	.L54:
 531 0008 42000F40 		.word	1074724930
 532              		.cfi_endproc
 533              	.LFE19:
 534              		.size	PWM_MOTOR_ReadPeriod, .-PWM_MOTOR_ReadPeriod
 535              		.global	PWM_MOTOR_initVar
 536              		.bss
 537              		.set	.LANCHOR0,. + 0
 538              		.type	PWM_MOTOR_initVar, %object
 539              		.size	PWM_MOTOR_initVar, 1
 540              	PWM_MOTOR_initVar:
 541 0000 00       		.space	1
 542              		.text
 543              	.Letext0:
 544              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 545              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 546              		.section	.debug_info,"",%progbits
 547              	.Ldebug_info0:
 548 0000 77030000 		.4byte	0x377
 549 0004 0400     		.2byte	0x4
 550 0006 00000000 		.4byte	.Ldebug_abbrev0
 551 000a 04       		.byte	0x4
 552 000b 01       		.uleb128 0x1
 553 000c A3020000 		.4byte	.LASF40
 554 0010 01       		.byte	0x1
 555 0011 14000000 		.4byte	.LASF41
 556 0015 41020000 		.4byte	.LASF42
 557 0019 00000000 		.4byte	.Ldebug_ranges0+0
 558 001d 00000000 		.4byte	0
 559 0021 00000000 		.4byte	.Ldebug_line0
 560 0025 02       		.uleb128 0x2
 561 0026 01       		.byte	0x1
 562 0027 06       		.byte	0x6
 563 0028 DD010000 		.4byte	.LASF0
 564 002c 02       		.uleb128 0x2
 565 002d 01       		.byte	0x1
 566 002e 08       		.byte	0x8
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 27


 567 002f AD000000 		.4byte	.LASF1
 568 0033 02       		.uleb128 0x2
 569 0034 02       		.byte	0x2
 570 0035 05       		.byte	0x5
 571 0036 56030000 		.4byte	.LASF2
 572 003a 02       		.uleb128 0x2
 573 003b 02       		.byte	0x2
 574 003c 07       		.byte	0x7
 575 003d 61000000 		.4byte	.LASF3
 576 0041 02       		.uleb128 0x2
 577 0042 04       		.byte	0x4
 578 0043 05       		.byte	0x5
 579 0044 8E030000 		.4byte	.LASF4
 580 0048 02       		.uleb128 0x2
 581 0049 04       		.byte	0x4
 582 004a 07       		.byte	0x7
 583 004b D6000000 		.4byte	.LASF5
 584 004f 02       		.uleb128 0x2
 585 0050 08       		.byte	0x8
 586 0051 05       		.byte	0x5
 587 0052 33020000 		.4byte	.LASF6
 588 0056 02       		.uleb128 0x2
 589 0057 08       		.byte	0x8
 590 0058 07       		.byte	0x7
 591 0059 96000000 		.4byte	.LASF7
 592 005d 03       		.uleb128 0x3
 593 005e 04       		.byte	0x4
 594 005f 05       		.byte	0x5
 595 0060 696E7400 		.ascii	"int\000"
 596 0064 02       		.uleb128 0x2
 597 0065 04       		.byte	0x4
 598 0066 07       		.byte	0x7
 599 0067 9D010000 		.4byte	.LASF8
 600 006b 04       		.uleb128 0x4
 601 006c E8000000 		.4byte	.LASF12
 602 0070 02       		.byte	0x2
 603 0071 B3       		.byte	0xb3
 604 0072 2C000000 		.4byte	0x2c
 605 0076 02       		.uleb128 0x2
 606 0077 04       		.byte	0x4
 607 0078 04       		.byte	0x4
 608 0079 7B000000 		.4byte	.LASF9
 609 007d 02       		.uleb128 0x2
 610 007e 08       		.byte	0x8
 611 007f 04       		.byte	0x4
 612 0080 74000000 		.4byte	.LASF10
 613 0084 02       		.uleb128 0x2
 614 0085 01       		.byte	0x1
 615 0086 08       		.byte	0x8
 616 0087 97030000 		.4byte	.LASF11
 617 008b 05       		.uleb128 0x5
 618 008c BB000000 		.4byte	.LASF13
 619 0090 02       		.byte	0x2
 620 0091 5D01     		.2byte	0x15d
 621 0093 97000000 		.4byte	0x97
 622 0097 06       		.uleb128 0x6
 623 0098 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 28


 624 009c 02       		.uleb128 0x2
 625 009d 04       		.byte	0x4
 626 009e 07       		.byte	0x7
 627 009f 0D020000 		.4byte	.LASF14
 628 00a3 07       		.uleb128 0x7
 629 00a4 35010000 		.4byte	.LASF15
 630 00a8 01       		.byte	0x1
 631 00a9 C7       		.byte	0xc7
 632 00aa 00000000 		.4byte	.LFB4
 633 00ae 10000000 		.4byte	.LFE4-.LFB4
 634 00b2 01       		.uleb128 0x1
 635 00b3 9C       		.byte	0x9c
 636 00b4 07       		.uleb128 0x7
 637 00b5 52000000 		.4byte	.LASF16
 638 00b9 01       		.byte	0x1
 639 00ba E9       		.byte	0xe9
 640 00bb 00000000 		.4byte	.LFB5
 641 00bf 10000000 		.4byte	.LFE5-.LFB5
 642 00c3 01       		.uleb128 0x1
 643 00c4 9C       		.byte	0x9c
 644 00c5 08       		.uleb128 0x8
 645 00c6 8C020000 		.4byte	.LASF17
 646 00ca 01       		.byte	0x1
 647 00cb 9301     		.2byte	0x193
 648 00cd 00000000 		.4byte	.LFB6
 649 00d1 0C000000 		.4byte	.LFE6-.LFB6
 650 00d5 01       		.uleb128 0x1
 651 00d6 9C       		.byte	0x9c
 652 00d7 EA000000 		.4byte	0xea
 653 00db 09       		.uleb128 0x9
 654 00dc F6000000 		.4byte	.LASF19
 655 00e0 01       		.byte	0x1
 656 00e1 9301     		.2byte	0x193
 657 00e3 6B000000 		.4byte	0x6b
 658 00e7 01       		.uleb128 0x1
 659 00e8 50       		.byte	0x50
 660 00e9 00       		.byte	0
 661 00ea 0A       		.uleb128 0xa
 662 00eb AA010000 		.4byte	.LASF26
 663 00ef 01       		.byte	0x1
 664 00f0 A901     		.2byte	0x1a9
 665 00f2 6B000000 		.4byte	0x6b
 666 00f6 00000000 		.4byte	.LFB7
 667 00fa 14000000 		.4byte	.LFE7-.LFB7
 668 00fe 01       		.uleb128 0x1
 669 00ff 9C       		.byte	0x9c
 670 0100 08       		.uleb128 0x8
 671 0101 C0000000 		.4byte	.LASF18
 672 0105 01       		.byte	0x1
 673 0106 E201     		.2byte	0x1e2
 674 0108 00000000 		.4byte	.LFB9
 675 010c 0C000000 		.4byte	.LFE9-.LFB9
 676 0110 01       		.uleb128 0x1
 677 0111 9C       		.byte	0x9c
 678 0112 25010000 		.4byte	0x125
 679 0116 09       		.uleb128 0x9
 680 0117 4B000000 		.4byte	.LASF20
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 29


 681 011b 01       		.byte	0x1
 682 011c E201     		.2byte	0x1e2
 683 011e 6B000000 		.4byte	0x6b
 684 0122 01       		.uleb128 0x1
 685 0123 50       		.byte	0x50
 686 0124 00       		.byte	0
 687 0125 08       		.uleb128 0x8
 688 0126 56010000 		.4byte	.LASF21
 689 012a 01       		.byte	0x1
 690 012b 2B02     		.2byte	0x22b
 691 012d 00000000 		.4byte	.LFB10
 692 0131 0C000000 		.4byte	.LFE10-.LFB10
 693 0135 01       		.uleb128 0x1
 694 0136 9C       		.byte	0x9c
 695 0137 4A010000 		.4byte	0x14a
 696 013b 09       		.uleb128 0x9
 697 013c B7030000 		.4byte	.LASF22
 698 0140 01       		.byte	0x1
 699 0141 2B02     		.2byte	0x22b
 700 0143 6B000000 		.4byte	0x6b
 701 0147 01       		.uleb128 0x1
 702 0148 50       		.byte	0x50
 703 0149 00       		.byte	0
 704 014a 08       		.uleb128 0x8
 705 014b 6E010000 		.4byte	.LASF23
 706 014f 01       		.byte	0x1
 707 0150 4802     		.2byte	0x248
 708 0152 00000000 		.4byte	.LFB11
 709 0156 0C000000 		.4byte	.LFE11-.LFB11
 710 015a 01       		.uleb128 0x1
 711 015b 9C       		.byte	0x9c
 712 015c 6F010000 		.4byte	0x16f
 713 0160 09       		.uleb128 0x9
 714 0161 B7030000 		.4byte	.LASF22
 715 0165 01       		.byte	0x1
 716 0166 4802     		.2byte	0x248
 717 0168 6B000000 		.4byte	0x6b
 718 016c 01       		.uleb128 0x1
 719 016d 50       		.byte	0x50
 720 016e 00       		.byte	0
 721 016f 08       		.uleb128 0x8
 722 0170 9C030000 		.4byte	.LASF24
 723 0174 01       		.byte	0x1
 724 0175 AC02     		.2byte	0x2ac
 725 0177 00000000 		.4byte	.LFB12
 726 017b 0C000000 		.4byte	.LFE12-.LFB12
 727 017f 01       		.uleb128 0x1
 728 0180 9C       		.byte	0x9c
 729 0181 94010000 		.4byte	0x194
 730 0185 09       		.uleb128 0x9
 731 0186 7E020000 		.4byte	.LASF25
 732 018a 01       		.byte	0x1
 733 018b AC02     		.2byte	0x2ac
 734 018d 6B000000 		.4byte	0x6b
 735 0191 01       		.uleb128 0x1
 736 0192 50       		.byte	0x50
 737 0193 00       		.byte	0
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 30


 738 0194 0A       		.uleb128 0xa
 739 0195 16020000 		.4byte	.LASF27
 740 0199 01       		.byte	0x1
 741 019a C702     		.2byte	0x2c7
 742 019c 6B000000 		.4byte	0x6b
 743 01a0 00000000 		.4byte	.LFB13
 744 01a4 0C000000 		.4byte	.LFE13-.LFB13
 745 01a8 01       		.uleb128 0x1
 746 01a9 9C       		.byte	0x9c
 747 01aa 0B       		.uleb128 0xb
 748 01ab FE000000 		.4byte	.LASF43
 749 01af 01       		.byte	0x1
 750 01b0 E102     		.2byte	0x2e1
 751 01b2 6B000000 		.4byte	0x6b
 752 01b6 00000000 		.4byte	.LFB14
 753 01ba 0C000000 		.4byte	.LFE14-.LFB14
 754 01be 01       		.uleb128 0x1
 755 01bf 9C       		.byte	0x9c
 756 01c0 D3010000 		.4byte	0x1d3
 757 01c4 0C       		.uleb128 0xc
 758 01c5 D6010000 		.4byte	.LASF33
 759 01c9 01       		.byte	0x1
 760 01ca E302     		.2byte	0x2e3
 761 01cc 6B000000 		.4byte	0x6b
 762 01d0 01       		.uleb128 0x1
 763 01d1 50       		.byte	0x50
 764 01d2 00       		.byte	0
 765 01d3 08       		.uleb128 0x8
 766 01d4 EE010000 		.4byte	.LASF28
 767 01d8 01       		.byte	0x1
 768 01d9 FD02     		.2byte	0x2fd
 769 01db 00000000 		.4byte	.LFB15
 770 01df 0C000000 		.4byte	.LFE15-.LFB15
 771 01e3 01       		.uleb128 0x1
 772 01e4 9C       		.byte	0x9c
 773 01e5 F8010000 		.4byte	0x1f8
 774 01e9 09       		.uleb128 0x9
 775 01ea EE000000 		.4byte	.LASF29
 776 01ee 01       		.byte	0x1
 777 01ef FD02     		.2byte	0x2fd
 778 01f1 6B000000 		.4byte	0x6b
 779 01f5 01       		.uleb128 0x1
 780 01f6 50       		.byte	0x50
 781 01f7 00       		.byte	0
 782 01f8 0A       		.uleb128 0xa
 783 01f9 31030000 		.4byte	.LASF30
 784 01fd 01       		.byte	0x1
 785 01fe 1603     		.2byte	0x316
 786 0200 6B000000 		.4byte	0x6b
 787 0204 00000000 		.4byte	.LFB16
 788 0208 0C000000 		.4byte	.LFE16-.LFB16
 789 020c 01       		.uleb128 0x1
 790 020d 9C       		.byte	0x9c
 791 020e 08       		.uleb128 0x8
 792 020f 00000000 		.4byte	.LASF31
 793 0213 01       		.byte	0x1
 794 0214 C501     		.2byte	0x1c5
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 31


 795 0216 00000000 		.4byte	.LFB8
 796 021a 12000000 		.4byte	.LFE8-.LFB8
 797 021e 01       		.uleb128 0x1
 798 021f 9C       		.byte	0x9c
 799 0220 37020000 		.4byte	0x237
 800 0224 0D       		.uleb128 0xd
 801 0225 08000000 		.4byte	.LVL7
 802 0229 F8010000 		.4byte	0x1f8
 803 022d 0D       		.uleb128 0xd
 804 022e 0C000000 		.4byte	.LVL8
 805 0232 94010000 		.4byte	0x194
 806 0236 00       		.byte	0
 807 0237 0E       		.uleb128 0xe
 808 0238 47030000 		.4byte	.LASF32
 809 023c 01       		.byte	0x1
 810 023d 54       		.byte	0x54
 811 023e 00000000 		.4byte	.LFB3
 812 0242 58000000 		.4byte	.LFE3-.LFB3
 813 0246 01       		.uleb128 0x1
 814 0247 9C       		.byte	0x9c
 815 0248 E7020000 		.4byte	0x2e7
 816 024c 0F       		.uleb128 0xf
 817 024d E9010000 		.4byte	.LASF34
 818 0251 01       		.byte	0x1
 819 0252 57       		.byte	0x57
 820 0253 6B000000 		.4byte	0x6b
 821 0257 00000000 		.4byte	.LLST0
 822 025b 0F       		.uleb128 0xf
 823 025c 1C010000 		.4byte	.LASF35
 824 0260 01       		.byte	0x1
 825 0261 5D       		.byte	0x5d
 826 0262 6B000000 		.4byte	0x6b
 827 0266 13000000 		.4byte	.LLST1
 828 026a 10       		.uleb128 0x10
 829 026b 20000000 		.4byte	.LVL11
 830 026f C5000000 		.4byte	0xc5
 831 0273 7E020000 		.4byte	0x27e
 832 0277 11       		.uleb128 0x11
 833 0278 01       		.uleb128 0x1
 834 0279 50       		.byte	0x50
 835 027a 02       		.uleb128 0x2
 836 027b 09       		.byte	0x9
 837 027c FF       		.byte	0xff
 838 027d 00       		.byte	0
 839 027e 10       		.uleb128 0x10
 840 027f 26000000 		.4byte	.LVL12
 841 0283 00010000 		.4byte	0x100
 842 0287 92020000 		.4byte	0x292
 843 028b 11       		.uleb128 0x11
 844 028c 01       		.uleb128 0x1
 845 028d 50       		.byte	0x50
 846 028e 02       		.uleb128 0x2
 847 028f 09       		.byte	0x9
 848 0290 FF       		.byte	0xff
 849 0291 00       		.byte	0
 850 0292 10       		.uleb128 0x10
 851 0293 2C000000 		.4byte	.LVL13
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 32


 852 0297 25010000 		.4byte	0x125
 853 029b A5020000 		.4byte	0x2a5
 854 029f 11       		.uleb128 0x11
 855 02a0 01       		.uleb128 0x1
 856 02a1 50       		.byte	0x50
 857 02a2 01       		.uleb128 0x1
 858 02a3 3A       		.byte	0x3a
 859 02a4 00       		.byte	0
 860 02a5 10       		.uleb128 0x10
 861 02a6 32000000 		.4byte	.LVL14
 862 02aa 4A010000 		.4byte	0x14a
 863 02ae B8020000 		.4byte	0x2b8
 864 02b2 11       		.uleb128 0x11
 865 02b3 01       		.uleb128 0x1
 866 02b4 50       		.byte	0x50
 867 02b5 01       		.uleb128 0x1
 868 02b6 3A       		.byte	0x3a
 869 02b7 00       		.byte	0
 870 02b8 10       		.uleb128 0x10
 871 02b9 38000000 		.4byte	.LVL15
 872 02bd 6F010000 		.4byte	0x16f
 873 02c1 CB020000 		.4byte	0x2cb
 874 02c5 11       		.uleb128 0x11
 875 02c6 01       		.uleb128 0x1
 876 02c7 50       		.byte	0x50
 877 02c8 01       		.uleb128 0x1
 878 02c9 30       		.byte	0x30
 879 02ca 00       		.byte	0
 880 02cb 0D       		.uleb128 0xd
 881 02cc 3C000000 		.4byte	.LVL16
 882 02d0 62030000 		.4byte	0x362
 883 02d4 0D       		.uleb128 0xd
 884 02d5 48000000 		.4byte	.LVL17
 885 02d9 6D030000 		.4byte	0x36d
 886 02dd 0D       		.uleb128 0xd
 887 02de 4C000000 		.4byte	.LVL18
 888 02e2 0E020000 		.4byte	0x20e
 889 02e6 00       		.byte	0
 890 02e7 0E       		.uleb128 0xe
 891 02e8 46010000 		.4byte	.LASF36
 892 02ec 01       		.byte	0x1
 893 02ed 37       		.byte	0x37
 894 02ee 00000000 		.4byte	.LFB2
 895 02f2 20000000 		.4byte	.LFE2-.LFB2
 896 02f6 01       		.uleb128 0x1
 897 02f7 9C       		.byte	0x9c
 898 02f8 0F030000 		.4byte	0x30f
 899 02fc 0D       		.uleb128 0xd
 900 02fd 0E000000 		.4byte	.LVL19
 901 0301 37020000 		.4byte	0x237
 902 0305 0D       		.uleb128 0xd
 903 0306 18000000 		.4byte	.LVL20
 904 030a A3000000 		.4byte	0xa3
 905 030e 00       		.byte	0
 906 030f 0A       		.uleb128 0xa
 907 0310 60030000 		.4byte	.LASF37
 908 0314 01       		.byte	0x1
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 33


 909 0315 4A03     		.2byte	0x34a
 910 0317 6B000000 		.4byte	0x6b
 911 031b 00000000 		.4byte	.LFB17
 912 031f 0C000000 		.4byte	.LFE17-.LFB17
 913 0323 01       		.uleb128 0x1
 914 0324 9C       		.byte	0x9c
 915 0325 0A       		.uleb128 0xa
 916 0326 77030000 		.4byte	.LASF38
 917 032a 01       		.byte	0x1
 918 032b 5E03     		.2byte	0x35e
 919 032d 6B000000 		.4byte	0x6b
 920 0331 00000000 		.4byte	.LFB18
 921 0335 0C000000 		.4byte	.LFE18-.LFB18
 922 0339 01       		.uleb128 0x1
 923 033a 9C       		.byte	0x9c
 924 033b 0A       		.uleb128 0xa
 925 033c 81000000 		.4byte	.LASF39
 926 0340 01       		.byte	0x1
 927 0341 7403     		.2byte	0x374
 928 0343 6B000000 		.4byte	0x6b
 929 0347 00000000 		.4byte	.LFB19
 930 034b 0C000000 		.4byte	.LFE19-.LFB19
 931 034f 01       		.uleb128 0x1
 932 0350 9C       		.byte	0x9c
 933 0351 12       		.uleb128 0x12
 934 0352 39000000 		.4byte	.LASF44
 935 0356 01       		.byte	0x1
 936 0357 20       		.byte	0x20
 937 0358 6B000000 		.4byte	0x6b
 938 035c 05       		.uleb128 0x5
 939 035d 03       		.byte	0x3
 940 035e 00000000 		.4byte	PWM_MOTOR_initVar
 941 0362 13       		.uleb128 0x13
 942 0363 86010000 		.4byte	.LASF45
 943 0367 03       		.byte	0x3
 944 0368 5E       		.byte	0x5e
 945 0369 6B000000 		.4byte	0x6b
 946 036d 14       		.uleb128 0x14
 947 036e C0010000 		.4byte	.LASF46
 948 0372 03       		.byte	0x3
 949 0373 5F       		.byte	0x5f
 950 0374 15       		.uleb128 0x15
 951 0375 6B000000 		.4byte	0x6b
 952 0379 00       		.byte	0
 953 037a 00       		.byte	0
 954              		.section	.debug_abbrev,"",%progbits
 955              	.Ldebug_abbrev0:
 956 0000 01       		.uleb128 0x1
 957 0001 11       		.uleb128 0x11
 958 0002 01       		.byte	0x1
 959 0003 25       		.uleb128 0x25
 960 0004 0E       		.uleb128 0xe
 961 0005 13       		.uleb128 0x13
 962 0006 0B       		.uleb128 0xb
 963 0007 03       		.uleb128 0x3
 964 0008 0E       		.uleb128 0xe
 965 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 34


 966 000a 0E       		.uleb128 0xe
 967 000b 55       		.uleb128 0x55
 968 000c 17       		.uleb128 0x17
 969 000d 11       		.uleb128 0x11
 970 000e 01       		.uleb128 0x1
 971 000f 10       		.uleb128 0x10
 972 0010 17       		.uleb128 0x17
 973 0011 00       		.byte	0
 974 0012 00       		.byte	0
 975 0013 02       		.uleb128 0x2
 976 0014 24       		.uleb128 0x24
 977 0015 00       		.byte	0
 978 0016 0B       		.uleb128 0xb
 979 0017 0B       		.uleb128 0xb
 980 0018 3E       		.uleb128 0x3e
 981 0019 0B       		.uleb128 0xb
 982 001a 03       		.uleb128 0x3
 983 001b 0E       		.uleb128 0xe
 984 001c 00       		.byte	0
 985 001d 00       		.byte	0
 986 001e 03       		.uleb128 0x3
 987 001f 24       		.uleb128 0x24
 988 0020 00       		.byte	0
 989 0021 0B       		.uleb128 0xb
 990 0022 0B       		.uleb128 0xb
 991 0023 3E       		.uleb128 0x3e
 992 0024 0B       		.uleb128 0xb
 993 0025 03       		.uleb128 0x3
 994 0026 08       		.uleb128 0x8
 995 0027 00       		.byte	0
 996 0028 00       		.byte	0
 997 0029 04       		.uleb128 0x4
 998 002a 16       		.uleb128 0x16
 999 002b 00       		.byte	0
 1000 002c 03       		.uleb128 0x3
 1001 002d 0E       		.uleb128 0xe
 1002 002e 3A       		.uleb128 0x3a
 1003 002f 0B       		.uleb128 0xb
 1004 0030 3B       		.uleb128 0x3b
 1005 0031 0B       		.uleb128 0xb
 1006 0032 49       		.uleb128 0x49
 1007 0033 13       		.uleb128 0x13
 1008 0034 00       		.byte	0
 1009 0035 00       		.byte	0
 1010 0036 05       		.uleb128 0x5
 1011 0037 16       		.uleb128 0x16
 1012 0038 00       		.byte	0
 1013 0039 03       		.uleb128 0x3
 1014 003a 0E       		.uleb128 0xe
 1015 003b 3A       		.uleb128 0x3a
 1016 003c 0B       		.uleb128 0xb
 1017 003d 3B       		.uleb128 0x3b
 1018 003e 05       		.uleb128 0x5
 1019 003f 49       		.uleb128 0x49
 1020 0040 13       		.uleb128 0x13
 1021 0041 00       		.byte	0
 1022 0042 00       		.byte	0
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 35


 1023 0043 06       		.uleb128 0x6
 1024 0044 35       		.uleb128 0x35
 1025 0045 00       		.byte	0
 1026 0046 49       		.uleb128 0x49
 1027 0047 13       		.uleb128 0x13
 1028 0048 00       		.byte	0
 1029 0049 00       		.byte	0
 1030 004a 07       		.uleb128 0x7
 1031 004b 2E       		.uleb128 0x2e
 1032 004c 00       		.byte	0
 1033 004d 3F       		.uleb128 0x3f
 1034 004e 19       		.uleb128 0x19
 1035 004f 03       		.uleb128 0x3
 1036 0050 0E       		.uleb128 0xe
 1037 0051 3A       		.uleb128 0x3a
 1038 0052 0B       		.uleb128 0xb
 1039 0053 3B       		.uleb128 0x3b
 1040 0054 0B       		.uleb128 0xb
 1041 0055 27       		.uleb128 0x27
 1042 0056 19       		.uleb128 0x19
 1043 0057 11       		.uleb128 0x11
 1044 0058 01       		.uleb128 0x1
 1045 0059 12       		.uleb128 0x12
 1046 005a 06       		.uleb128 0x6
 1047 005b 40       		.uleb128 0x40
 1048 005c 18       		.uleb128 0x18
 1049 005d 9742     		.uleb128 0x2117
 1050 005f 19       		.uleb128 0x19
 1051 0060 00       		.byte	0
 1052 0061 00       		.byte	0
 1053 0062 08       		.uleb128 0x8
 1054 0063 2E       		.uleb128 0x2e
 1055 0064 01       		.byte	0x1
 1056 0065 3F       		.uleb128 0x3f
 1057 0066 19       		.uleb128 0x19
 1058 0067 03       		.uleb128 0x3
 1059 0068 0E       		.uleb128 0xe
 1060 0069 3A       		.uleb128 0x3a
 1061 006a 0B       		.uleb128 0xb
 1062 006b 3B       		.uleb128 0x3b
 1063 006c 05       		.uleb128 0x5
 1064 006d 27       		.uleb128 0x27
 1065 006e 19       		.uleb128 0x19
 1066 006f 11       		.uleb128 0x11
 1067 0070 01       		.uleb128 0x1
 1068 0071 12       		.uleb128 0x12
 1069 0072 06       		.uleb128 0x6
 1070 0073 40       		.uleb128 0x40
 1071 0074 18       		.uleb128 0x18
 1072 0075 9742     		.uleb128 0x2117
 1073 0077 19       		.uleb128 0x19
 1074 0078 01       		.uleb128 0x1
 1075 0079 13       		.uleb128 0x13
 1076 007a 00       		.byte	0
 1077 007b 00       		.byte	0
 1078 007c 09       		.uleb128 0x9
 1079 007d 05       		.uleb128 0x5
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 36


 1080 007e 00       		.byte	0
 1081 007f 03       		.uleb128 0x3
 1082 0080 0E       		.uleb128 0xe
 1083 0081 3A       		.uleb128 0x3a
 1084 0082 0B       		.uleb128 0xb
 1085 0083 3B       		.uleb128 0x3b
 1086 0084 05       		.uleb128 0x5
 1087 0085 49       		.uleb128 0x49
 1088 0086 13       		.uleb128 0x13
 1089 0087 02       		.uleb128 0x2
 1090 0088 18       		.uleb128 0x18
 1091 0089 00       		.byte	0
 1092 008a 00       		.byte	0
 1093 008b 0A       		.uleb128 0xa
 1094 008c 2E       		.uleb128 0x2e
 1095 008d 00       		.byte	0
 1096 008e 3F       		.uleb128 0x3f
 1097 008f 19       		.uleb128 0x19
 1098 0090 03       		.uleb128 0x3
 1099 0091 0E       		.uleb128 0xe
 1100 0092 3A       		.uleb128 0x3a
 1101 0093 0B       		.uleb128 0xb
 1102 0094 3B       		.uleb128 0x3b
 1103 0095 05       		.uleb128 0x5
 1104 0096 27       		.uleb128 0x27
 1105 0097 19       		.uleb128 0x19
 1106 0098 49       		.uleb128 0x49
 1107 0099 13       		.uleb128 0x13
 1108 009a 11       		.uleb128 0x11
 1109 009b 01       		.uleb128 0x1
 1110 009c 12       		.uleb128 0x12
 1111 009d 06       		.uleb128 0x6
 1112 009e 40       		.uleb128 0x40
 1113 009f 18       		.uleb128 0x18
 1114 00a0 9742     		.uleb128 0x2117
 1115 00a2 19       		.uleb128 0x19
 1116 00a3 00       		.byte	0
 1117 00a4 00       		.byte	0
 1118 00a5 0B       		.uleb128 0xb
 1119 00a6 2E       		.uleb128 0x2e
 1120 00a7 01       		.byte	0x1
 1121 00a8 3F       		.uleb128 0x3f
 1122 00a9 19       		.uleb128 0x19
 1123 00aa 03       		.uleb128 0x3
 1124 00ab 0E       		.uleb128 0xe
 1125 00ac 3A       		.uleb128 0x3a
 1126 00ad 0B       		.uleb128 0xb
 1127 00ae 3B       		.uleb128 0x3b
 1128 00af 05       		.uleb128 0x5
 1129 00b0 27       		.uleb128 0x27
 1130 00b1 19       		.uleb128 0x19
 1131 00b2 49       		.uleb128 0x49
 1132 00b3 13       		.uleb128 0x13
 1133 00b4 11       		.uleb128 0x11
 1134 00b5 01       		.uleb128 0x1
 1135 00b6 12       		.uleb128 0x12
 1136 00b7 06       		.uleb128 0x6
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 37


 1137 00b8 40       		.uleb128 0x40
 1138 00b9 18       		.uleb128 0x18
 1139 00ba 9742     		.uleb128 0x2117
 1140 00bc 19       		.uleb128 0x19
 1141 00bd 01       		.uleb128 0x1
 1142 00be 13       		.uleb128 0x13
 1143 00bf 00       		.byte	0
 1144 00c0 00       		.byte	0
 1145 00c1 0C       		.uleb128 0xc
 1146 00c2 34       		.uleb128 0x34
 1147 00c3 00       		.byte	0
 1148 00c4 03       		.uleb128 0x3
 1149 00c5 0E       		.uleb128 0xe
 1150 00c6 3A       		.uleb128 0x3a
 1151 00c7 0B       		.uleb128 0xb
 1152 00c8 3B       		.uleb128 0x3b
 1153 00c9 05       		.uleb128 0x5
 1154 00ca 49       		.uleb128 0x49
 1155 00cb 13       		.uleb128 0x13
 1156 00cc 02       		.uleb128 0x2
 1157 00cd 18       		.uleb128 0x18
 1158 00ce 00       		.byte	0
 1159 00cf 00       		.byte	0
 1160 00d0 0D       		.uleb128 0xd
 1161 00d1 898201   		.uleb128 0x4109
 1162 00d4 00       		.byte	0
 1163 00d5 11       		.uleb128 0x11
 1164 00d6 01       		.uleb128 0x1
 1165 00d7 31       		.uleb128 0x31
 1166 00d8 13       		.uleb128 0x13
 1167 00d9 00       		.byte	0
 1168 00da 00       		.byte	0
 1169 00db 0E       		.uleb128 0xe
 1170 00dc 2E       		.uleb128 0x2e
 1171 00dd 01       		.byte	0x1
 1172 00de 3F       		.uleb128 0x3f
 1173 00df 19       		.uleb128 0x19
 1174 00e0 03       		.uleb128 0x3
 1175 00e1 0E       		.uleb128 0xe
 1176 00e2 3A       		.uleb128 0x3a
 1177 00e3 0B       		.uleb128 0xb
 1178 00e4 3B       		.uleb128 0x3b
 1179 00e5 0B       		.uleb128 0xb
 1180 00e6 27       		.uleb128 0x27
 1181 00e7 19       		.uleb128 0x19
 1182 00e8 11       		.uleb128 0x11
 1183 00e9 01       		.uleb128 0x1
 1184 00ea 12       		.uleb128 0x12
 1185 00eb 06       		.uleb128 0x6
 1186 00ec 40       		.uleb128 0x40
 1187 00ed 18       		.uleb128 0x18
 1188 00ee 9742     		.uleb128 0x2117
 1189 00f0 19       		.uleb128 0x19
 1190 00f1 01       		.uleb128 0x1
 1191 00f2 13       		.uleb128 0x13
 1192 00f3 00       		.byte	0
 1193 00f4 00       		.byte	0
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 38


 1194 00f5 0F       		.uleb128 0xf
 1195 00f6 34       		.uleb128 0x34
 1196 00f7 00       		.byte	0
 1197 00f8 03       		.uleb128 0x3
 1198 00f9 0E       		.uleb128 0xe
 1199 00fa 3A       		.uleb128 0x3a
 1200 00fb 0B       		.uleb128 0xb
 1201 00fc 3B       		.uleb128 0x3b
 1202 00fd 0B       		.uleb128 0xb
 1203 00fe 49       		.uleb128 0x49
 1204 00ff 13       		.uleb128 0x13
 1205 0100 02       		.uleb128 0x2
 1206 0101 17       		.uleb128 0x17
 1207 0102 00       		.byte	0
 1208 0103 00       		.byte	0
 1209 0104 10       		.uleb128 0x10
 1210 0105 898201   		.uleb128 0x4109
 1211 0108 01       		.byte	0x1
 1212 0109 11       		.uleb128 0x11
 1213 010a 01       		.uleb128 0x1
 1214 010b 31       		.uleb128 0x31
 1215 010c 13       		.uleb128 0x13
 1216 010d 01       		.uleb128 0x1
 1217 010e 13       		.uleb128 0x13
 1218 010f 00       		.byte	0
 1219 0110 00       		.byte	0
 1220 0111 11       		.uleb128 0x11
 1221 0112 8A8201   		.uleb128 0x410a
 1222 0115 00       		.byte	0
 1223 0116 02       		.uleb128 0x2
 1224 0117 18       		.uleb128 0x18
 1225 0118 9142     		.uleb128 0x2111
 1226 011a 18       		.uleb128 0x18
 1227 011b 00       		.byte	0
 1228 011c 00       		.byte	0
 1229 011d 12       		.uleb128 0x12
 1230 011e 34       		.uleb128 0x34
 1231 011f 00       		.byte	0
 1232 0120 03       		.uleb128 0x3
 1233 0121 0E       		.uleb128 0xe
 1234 0122 3A       		.uleb128 0x3a
 1235 0123 0B       		.uleb128 0xb
 1236 0124 3B       		.uleb128 0x3b
 1237 0125 0B       		.uleb128 0xb
 1238 0126 49       		.uleb128 0x49
 1239 0127 13       		.uleb128 0x13
 1240 0128 3F       		.uleb128 0x3f
 1241 0129 19       		.uleb128 0x19
 1242 012a 02       		.uleb128 0x2
 1243 012b 18       		.uleb128 0x18
 1244 012c 00       		.byte	0
 1245 012d 00       		.byte	0
 1246 012e 13       		.uleb128 0x13
 1247 012f 2E       		.uleb128 0x2e
 1248 0130 00       		.byte	0
 1249 0131 3F       		.uleb128 0x3f
 1250 0132 19       		.uleb128 0x19
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 39


 1251 0133 03       		.uleb128 0x3
 1252 0134 0E       		.uleb128 0xe
 1253 0135 3A       		.uleb128 0x3a
 1254 0136 0B       		.uleb128 0xb
 1255 0137 3B       		.uleb128 0x3b
 1256 0138 0B       		.uleb128 0xb
 1257 0139 27       		.uleb128 0x27
 1258 013a 19       		.uleb128 0x19
 1259 013b 49       		.uleb128 0x49
 1260 013c 13       		.uleb128 0x13
 1261 013d 3C       		.uleb128 0x3c
 1262 013e 19       		.uleb128 0x19
 1263 013f 00       		.byte	0
 1264 0140 00       		.byte	0
 1265 0141 14       		.uleb128 0x14
 1266 0142 2E       		.uleb128 0x2e
 1267 0143 01       		.byte	0x1
 1268 0144 3F       		.uleb128 0x3f
 1269 0145 19       		.uleb128 0x19
 1270 0146 03       		.uleb128 0x3
 1271 0147 0E       		.uleb128 0xe
 1272 0148 3A       		.uleb128 0x3a
 1273 0149 0B       		.uleb128 0xb
 1274 014a 3B       		.uleb128 0x3b
 1275 014b 0B       		.uleb128 0xb
 1276 014c 27       		.uleb128 0x27
 1277 014d 19       		.uleb128 0x19
 1278 014e 3C       		.uleb128 0x3c
 1279 014f 19       		.uleb128 0x19
 1280 0150 00       		.byte	0
 1281 0151 00       		.byte	0
 1282 0152 15       		.uleb128 0x15
 1283 0153 05       		.uleb128 0x5
 1284 0154 00       		.byte	0
 1285 0155 49       		.uleb128 0x49
 1286 0156 13       		.uleb128 0x13
 1287 0157 00       		.byte	0
 1288 0158 00       		.byte	0
 1289 0159 00       		.byte	0
 1290              		.section	.debug_loc,"",%progbits
 1291              	.Ldebug_loc0:
 1292              	.LLST0:
 1293 0000 0A000000 		.4byte	.LVL9
 1294 0004 0E000000 		.4byte	.LVL10
 1295 0008 0100     		.2byte	0x1
 1296 000a 53       		.byte	0x53
 1297 000b 00000000 		.4byte	0
 1298 000f 00000000 		.4byte	0
 1299              	.LLST1:
 1300 0013 3C000000 		.4byte	.LVL16
 1301 0017 47000000 		.4byte	.LVL17-1
 1302 001b 0100     		.2byte	0x1
 1303 001d 50       		.byte	0x50
 1304 001e 00000000 		.4byte	0
 1305 0022 00000000 		.4byte	0
 1306              		.section	.debug_aranges,"",%progbits
 1307 0000 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 40


 1308 0004 0200     		.2byte	0x2
 1309 0006 00000000 		.4byte	.Ldebug_info0
 1310 000a 04       		.byte	0x4
 1311 000b 00       		.byte	0
 1312 000c 0000     		.2byte	0
 1313 000e 0000     		.2byte	0
 1314 0010 00000000 		.4byte	.LFB4
 1315 0014 10000000 		.4byte	.LFE4-.LFB4
 1316 0018 00000000 		.4byte	.LFB5
 1317 001c 10000000 		.4byte	.LFE5-.LFB5
 1318 0020 00000000 		.4byte	.LFB6
 1319 0024 0C000000 		.4byte	.LFE6-.LFB6
 1320 0028 00000000 		.4byte	.LFB7
 1321 002c 14000000 		.4byte	.LFE7-.LFB7
 1322 0030 00000000 		.4byte	.LFB9
 1323 0034 0C000000 		.4byte	.LFE9-.LFB9
 1324 0038 00000000 		.4byte	.LFB10
 1325 003c 0C000000 		.4byte	.LFE10-.LFB10
 1326 0040 00000000 		.4byte	.LFB11
 1327 0044 0C000000 		.4byte	.LFE11-.LFB11
 1328 0048 00000000 		.4byte	.LFB12
 1329 004c 0C000000 		.4byte	.LFE12-.LFB12
 1330 0050 00000000 		.4byte	.LFB13
 1331 0054 0C000000 		.4byte	.LFE13-.LFB13
 1332 0058 00000000 		.4byte	.LFB14
 1333 005c 0C000000 		.4byte	.LFE14-.LFB14
 1334 0060 00000000 		.4byte	.LFB15
 1335 0064 0C000000 		.4byte	.LFE15-.LFB15
 1336 0068 00000000 		.4byte	.LFB16
 1337 006c 0C000000 		.4byte	.LFE16-.LFB16
 1338 0070 00000000 		.4byte	.LFB8
 1339 0074 12000000 		.4byte	.LFE8-.LFB8
 1340 0078 00000000 		.4byte	.LFB3
 1341 007c 58000000 		.4byte	.LFE3-.LFB3
 1342 0080 00000000 		.4byte	.LFB2
 1343 0084 20000000 		.4byte	.LFE2-.LFB2
 1344 0088 00000000 		.4byte	.LFB17
 1345 008c 0C000000 		.4byte	.LFE17-.LFB17
 1346 0090 00000000 		.4byte	.LFB18
 1347 0094 0C000000 		.4byte	.LFE18-.LFB18
 1348 0098 00000000 		.4byte	.LFB19
 1349 009c 0C000000 		.4byte	.LFE19-.LFB19
 1350 00a0 00000000 		.4byte	0
 1351 00a4 00000000 		.4byte	0
 1352              		.section	.debug_ranges,"",%progbits
 1353              	.Ldebug_ranges0:
 1354 0000 00000000 		.4byte	.LFB4
 1355 0004 10000000 		.4byte	.LFE4
 1356 0008 00000000 		.4byte	.LFB5
 1357 000c 10000000 		.4byte	.LFE5
 1358 0010 00000000 		.4byte	.LFB6
 1359 0014 0C000000 		.4byte	.LFE6
 1360 0018 00000000 		.4byte	.LFB7
 1361 001c 14000000 		.4byte	.LFE7
 1362 0020 00000000 		.4byte	.LFB9
 1363 0024 0C000000 		.4byte	.LFE9
 1364 0028 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 41


 1365 002c 0C000000 		.4byte	.LFE10
 1366 0030 00000000 		.4byte	.LFB11
 1367 0034 0C000000 		.4byte	.LFE11
 1368 0038 00000000 		.4byte	.LFB12
 1369 003c 0C000000 		.4byte	.LFE12
 1370 0040 00000000 		.4byte	.LFB13
 1371 0044 0C000000 		.4byte	.LFE13
 1372 0048 00000000 		.4byte	.LFB14
 1373 004c 0C000000 		.4byte	.LFE14
 1374 0050 00000000 		.4byte	.LFB15
 1375 0054 0C000000 		.4byte	.LFE15
 1376 0058 00000000 		.4byte	.LFB16
 1377 005c 0C000000 		.4byte	.LFE16
 1378 0060 00000000 		.4byte	.LFB8
 1379 0064 12000000 		.4byte	.LFE8
 1380 0068 00000000 		.4byte	.LFB3
 1381 006c 58000000 		.4byte	.LFE3
 1382 0070 00000000 		.4byte	.LFB2
 1383 0074 20000000 		.4byte	.LFE2
 1384 0078 00000000 		.4byte	.LFB17
 1385 007c 0C000000 		.4byte	.LFE17
 1386 0080 00000000 		.4byte	.LFB18
 1387 0084 0C000000 		.4byte	.LFE18
 1388 0088 00000000 		.4byte	.LFB19
 1389 008c 0C000000 		.4byte	.LFE19
 1390 0090 00000000 		.4byte	0
 1391 0094 00000000 		.4byte	0
 1392              		.section	.debug_line,"",%progbits
 1393              	.Ldebug_line0:
 1394 0000 B5010000 		.section	.debug_str,"MS",%progbits,1
 1394      02005300 
 1394      00000201 
 1394      FB0E0D00 
 1394      01010101 
 1395              	.LASF31:
 1396 0000 50574D5F 		.ascii	"PWM_MOTOR_ClearFIFO\000"
 1396      4D4F544F 
 1396      525F436C 
 1396      65617246 
 1396      49464F00 
 1397              	.LASF41:
 1398 0014 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_MOTOR.c\000"
 1398      6E657261 
 1398      7465645F 
 1398      536F7572 
 1398      63655C50 
 1399              	.LASF44:
 1400 0039 50574D5F 		.ascii	"PWM_MOTOR_initVar\000"
 1400      4D4F544F 
 1400      525F696E 
 1400      69745661 
 1400      7200
 1401              	.LASF20:
 1402 004b 70657269 		.ascii	"period\000"
 1402      6F6400
 1403              	.LASF16:
 1404 0052 50574D5F 		.ascii	"PWM_MOTOR_Stop\000"
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 42


 1404      4D4F544F 
 1404      525F5374 
 1404      6F7000
 1405              	.LASF3:
 1406 0061 73686F72 		.ascii	"short unsigned int\000"
 1406      7420756E 
 1406      7369676E 
 1406      65642069 
 1406      6E7400
 1407              	.LASF10:
 1408 0074 646F7562 		.ascii	"double\000"
 1408      6C6500
 1409              	.LASF9:
 1410 007b 666C6F61 		.ascii	"float\000"
 1410      7400
 1411              	.LASF39:
 1412 0081 50574D5F 		.ascii	"PWM_MOTOR_ReadPeriod\000"
 1412      4D4F544F 
 1412      525F5265 
 1412      61645065 
 1412      72696F64 
 1413              	.LASF7:
 1414 0096 6C6F6E67 		.ascii	"long long unsigned int\000"
 1414      206C6F6E 
 1414      6720756E 
 1414      7369676E 
 1414      65642069 
 1415              	.LASF1:
 1416 00ad 756E7369 		.ascii	"unsigned char\000"
 1416      676E6564 
 1416      20636861 
 1416      7200
 1417              	.LASF13:
 1418 00bb 72656738 		.ascii	"reg8\000"
 1418      00
 1419              	.LASF18:
 1420 00c0 50574D5F 		.ascii	"PWM_MOTOR_WritePeriod\000"
 1420      4D4F544F 
 1420      525F5772 
 1420      69746550 
 1420      6572696F 
 1421              	.LASF5:
 1422 00d6 6C6F6E67 		.ascii	"long unsigned int\000"
 1422      20756E73 
 1422      69676E65 
 1422      6420696E 
 1422      7400
 1423              	.LASF12:
 1424 00e8 75696E74 		.ascii	"uint8\000"
 1424      3800
 1425              	.LASF29:
 1426 00ee 636F6E74 		.ascii	"control\000"
 1426      726F6C00 
 1427              	.LASF19:
 1428 00f6 636F756E 		.ascii	"counter\000"
 1428      74657200 
 1429              	.LASF43:
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 43


 1430 00fe 50574D5F 		.ascii	"PWM_MOTOR_ReadControlRegister\000"
 1430      4D4F544F 
 1430      525F5265 
 1430      6164436F 
 1430      6E74726F 
 1431              	.LASF35:
 1432 011c 50574D5F 		.ascii	"PWM_MOTOR_interruptState\000"
 1432      4D4F544F 
 1432      525F696E 
 1432      74657272 
 1432      75707453 
 1433              	.LASF15:
 1434 0135 50574D5F 		.ascii	"PWM_MOTOR_Enable\000"
 1434      4D4F544F 
 1434      525F456E 
 1434      61626C65 
 1434      00
 1435              	.LASF36:
 1436 0146 50574D5F 		.ascii	"PWM_MOTOR_Start\000"
 1436      4D4F544F 
 1436      525F5374 
 1436      61727400 
 1437              	.LASF21:
 1438 0156 50574D5F 		.ascii	"PWM_MOTOR_WriteCompare1\000"
 1438      4D4F544F 
 1438      525F5772 
 1438      69746543 
 1438      6F6D7061 
 1439              	.LASF23:
 1440 016e 50574D5F 		.ascii	"PWM_MOTOR_WriteCompare2\000"
 1440      4D4F544F 
 1440      525F5772 
 1440      69746543 
 1440      6F6D7061 
 1441              	.LASF45:
 1442 0186 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1442      74657243 
 1442      72697469 
 1442      63616C53 
 1442      65637469 
 1443              	.LASF8:
 1444 019d 756E7369 		.ascii	"unsigned int\000"
 1444      676E6564 
 1444      20696E74 
 1444      00
 1445              	.LASF26:
 1446 01aa 50574D5F 		.ascii	"PWM_MOTOR_ReadCounter\000"
 1446      4D4F544F 
 1446      525F5265 
 1446      6164436F 
 1446      756E7465 
 1447              	.LASF46:
 1448 01c0 43794578 		.ascii	"CyExitCriticalSection\000"
 1448      69744372 
 1448      69746963 
 1448      616C5365 
 1448      6374696F 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 44


 1449              	.LASF33:
 1450 01d6 72657375 		.ascii	"result\000"
 1450      6C7400
 1451              	.LASF0:
 1452 01dd 7369676E 		.ascii	"signed char\000"
 1452      65642063 
 1452      68617200 
 1453              	.LASF34:
 1454 01e9 6374726C 		.ascii	"ctrl\000"
 1454      00
 1455              	.LASF28:
 1456 01ee 50574D5F 		.ascii	"PWM_MOTOR_WriteControlRegister\000"
 1456      4D4F544F 
 1456      525F5772 
 1456      69746543 
 1456      6F6E7472 
 1457              	.LASF14:
 1458 020d 73697A65 		.ascii	"sizetype\000"
 1458      74797065 
 1458      00
 1459              	.LASF27:
 1460 0216 50574D5F 		.ascii	"PWM_MOTOR_ReadStatusRegister\000"
 1460      4D4F544F 
 1460      525F5265 
 1460      61645374 
 1460      61747573 
 1461              	.LASF6:
 1462 0233 6C6F6E67 		.ascii	"long long int\000"
 1462      206C6F6E 
 1462      6720696E 
 1462      7400
 1463              	.LASF42:
 1464 0241 433A5C55 		.ascii	"C:\\Users\\MCisek\\Documents\\balancing_robot\\Proj"
 1464      73657273 
 1464      5C4D4369 
 1464      73656B5C 
 1464      446F6375 
 1465 026f 65637431 		.ascii	"ect1_acc.cydsn\000"
 1465      5F616363 
 1465      2E637964 
 1465      736E00
 1466              	.LASF25:
 1467 027e 696E7465 		.ascii	"interruptMode\000"
 1467      72727570 
 1467      744D6F64 
 1467      6500
 1468              	.LASF17:
 1469 028c 50574D5F 		.ascii	"PWM_MOTOR_WriteCounter\000"
 1469      4D4F544F 
 1469      525F5772 
 1469      69746543 
 1469      6F756E74 
 1470              	.LASF40:
 1471 02a3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1471      4320342E 
 1471      392E3320 
 1471      32303135 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\cckuJYmk.s 			page 45


 1471      30333033 
 1472 02d6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1472      20726576 
 1472      6973696F 
 1472      6E203232 
 1472      31323230 
 1473 0309 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1473      66756E63 
 1473      74696F6E 
 1473      2D736563 
 1473      74696F6E 
 1474              	.LASF30:
 1475 0331 50574D5F 		.ascii	"PWM_MOTOR_ReadCapture\000"
 1475      4D4F544F 
 1475      525F5265 
 1475      61644361 
 1475      70747572 
 1476              	.LASF32:
 1477 0347 50574D5F 		.ascii	"PWM_MOTOR_Init\000"
 1477      4D4F544F 
 1477      525F496E 
 1477      697400
 1478              	.LASF2:
 1479 0356 73686F72 		.ascii	"short int\000"
 1479      7420696E 
 1479      7400
 1480              	.LASF37:
 1481 0360 50574D5F 		.ascii	"PWM_MOTOR_ReadCompare1\000"
 1481      4D4F544F 
 1481      525F5265 
 1481      6164436F 
 1481      6D706172 
 1482              	.LASF38:
 1483 0377 50574D5F 		.ascii	"PWM_MOTOR_ReadCompare2\000"
 1483      4D4F544F 
 1483      525F5265 
 1483      6164436F 
 1483      6D706172 
 1484              	.LASF4:
 1485 038e 6C6F6E67 		.ascii	"long int\000"
 1485      20696E74 
 1485      00
 1486              	.LASF11:
 1487 0397 63686172 		.ascii	"char\000"
 1487      00
 1488              	.LASF24:
 1489 039c 50574D5F 		.ascii	"PWM_MOTOR_SetInterruptMode\000"
 1489      4D4F544F 
 1489      525F5365 
 1489      74496E74 
 1489      65727275 
 1490              	.LASF22:
 1491 03b7 636F6D70 		.ascii	"compare\000"
 1491      61726500 
 1492              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
