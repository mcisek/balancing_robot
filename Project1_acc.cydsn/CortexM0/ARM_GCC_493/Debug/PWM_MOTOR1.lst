ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_MOTOR1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_MOTOR1_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_MOTOR1_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_MOTOR1_Enable, %function
  23              	PWM_MOTOR1_Enable:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_MOTOR1.c"
   1:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * File Name: PWM_MOTOR1.c
   3:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
   5:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  15:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  17:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
  24:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #include "PWM_MOTOR1.h"
  25:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
  26:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #ifdef PWM_MOTOR1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #endif /* PWM_MOTOR1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
  32:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** uint8 PWM_MOTOR1_initVar = 0u;
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
  34:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
  35:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Function Name: PWM_MOTOR1_Start
  37:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  39:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  44:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  47:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  50:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  PWM_MOTOR1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  54:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** void PWM_MOTOR1_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** {
  57:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     if(PWM_MOTOR1_initVar == 0u)
  59:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
  60:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_Init();
  61:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_initVar = 1u;
  62:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
  63:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     PWM_MOTOR1_Enable();
  64:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
  65:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** }
  66:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
  67:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
  68:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Function Name: PWM_MOTOR1_Init
  70:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  72:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  PWM_MOTOR1_Start().
  76:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  77:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  80:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
  83:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** void PWM_MOTOR1_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** {
  86:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UsingFixedFunction || PWM_MOTOR1_UseControl)
  87:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UsingFixedFunction || PWM_MOTOR1_UseControl) */
  89:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if(!PWM_MOTOR1_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if(PWM_MOTOR1_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             uint8 PWM_MOTOR1_interruptState;
  94:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (!PWM_MOTOR1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
  97:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_CONTROL |= PWM_MOTOR1_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if (PWM_MOTOR1_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_CONTROL |= PWM_MOTOR1_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 104:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         ctrl = PWM_MOTOR1_CONTROL3 & ((uint8 )(~PWM_MOTOR1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_CONTROL3 = ctrl | PWM_MOTOR1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 107:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_RT1 &= ((uint8)(~PWM_MOTOR1_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_RT1 |= PWM_MOTOR1_SYNC;
 110:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 111:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_RT1 &= ((uint8)(~PWM_MOTOR1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_RT1 |= PWM_MOTOR1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 115:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #elif (PWM_MOTOR1_UseControl)
 116:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         ctrl = PWM_MOTOR1_CONTROL & ((uint8)(~PWM_MOTOR1_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 ((uint8)(~PWM_MOTOR1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_CONTROL = ctrl | PWM_MOTOR1_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                    PWM_MOTOR1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 123:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (!PWM_MOTOR1_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if (PWM_MOTOR1_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_AUX_CONTROLDP0 |= (PWM_MOTOR1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else /* (PWM_MOTOR1_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_AUX_CONTROLDP0 |= (PWM_MOTOR1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_AUX_CONTROLDP1 |= (PWM_MOTOR1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 133:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_WriteCounter(PWM_MOTOR1_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (!PWM_MOTOR1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 136:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     PWM_MOTOR1_WritePeriod(PWM_MOTOR1_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 138:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if (PWM_MOTOR1_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_WriteCompare(PWM_MOTOR1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_WriteCompare1(PWM_MOTOR1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_WriteCompare2(PWM_MOTOR1_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 145:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if (PWM_MOTOR1_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_WriteKillTime(PWM_MOTOR1_MinimumKillTime);
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 149:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if (PWM_MOTOR1_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_WriteDeadTime(PWM_MOTOR1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 153:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UseStatus || PWM_MOTOR1_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_SetInterruptMode(PWM_MOTOR1_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UseStatus || PWM_MOTOR1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 157:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_GLOBAL_ENABLE |= PWM_MOTOR1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_CONTROL2 |= PWM_MOTOR1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if(PWM_MOTOR1_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 165:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_STATUS_AUX_CTRL |= PWM_MOTOR1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 171:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             CyExitCriticalSection(PWM_MOTOR1_interruptState);
 173:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 174:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Clear the FIFO to enable the PWM_MOTOR1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** }
 180:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 181:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 182:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Function Name: PWM_MOTOR1_Enable
 184:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 186:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 189:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 192:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 195:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 198:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** void PWM_MOTOR1_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 5


 202:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_GLOBAL_ENABLE |= PWM_MOTOR1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_GLOBAL_STBY_ENABLE |= PWM_MOTOR1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 207:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UseControl || PWM_MOTOR1_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_CONTROL |= PWM_MOTOR1_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UseControl || PWM_MOTOR1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 73000F40 		.word	1074724979
  41              		.cfi_endproc
  42              	.LFE4:
  43              		.size	PWM_MOTOR1_Enable, .-PWM_MOTOR1_Enable
  44              		.section	.text.PWM_MOTOR1_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWM_MOTOR1_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWM_MOTOR1_Stop, %function
  50              	PWM_MOTOR1_Stop:
  51              	.LFB5:
 212:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 213:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 214:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Function Name: PWM_MOTOR1_Stop
 216:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 218:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 222:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 225:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 228:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 232:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** void PWM_MOTOR1_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** {
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UseControl || PWM_MOTOR1_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_CONTROL &= ((uint8)(~PWM_MOTOR1_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UseControl || PWM_MOTOR1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 239:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_GLOBAL_ENABLE &= ((uint8)(~PWM_MOTOR1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_MOTOR1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 73000F40 		.word	1074724979
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	PWM_MOTOR1_Stop, .-PWM_MOTOR1_Stop
  70              		.section	.text.PWM_MOTOR1_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_MOTOR1_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_MOTOR1_WriteCounter, %function
  76              	PWM_MOTOR1_WriteCounter:
  77              	.LFB6:
 245:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 246:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #if (PWM_MOTOR1_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 249:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 250:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Function Name: PWM_MOTOR1_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 254:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 258:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 262:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 265:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *******************************************************************************/
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 7


 266:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         void PWM_MOTOR1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         {
 268:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #if(PWM_MOTOR1_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 270:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 #if(0 != PWM_MOTOR1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTOR1_CTRL_CMPMOD
 272:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 #endif /* (0 != PWM_MOTOR1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 276:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 PWM_MOTOR1_CONTROL3 &= ((uint8)(~PWM_MOTOR1_CTRL_CMPMODE1_MASK)); /*Clear Existing 
 277:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 PWM_MOTOR1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 279:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #elif (PWM_MOTOR1_UseControl)
 280:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 281:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 #if(0 != PWM_MOTOR1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_MOTOR1_CTRL_CMPMO
 283:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                                 PWM_MOTOR1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                     uint8 comparemode1masked = comparemode & PWM_MOTOR1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 #endif /* (0 != PWM_MOTOR1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 288:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 #if(0 != PWM_MOTOR1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_MOTOR1_CTRL_CMPMO
 290:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                                PWM_MOTOR1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                     uint8 comparemode2masked = comparemode & PWM_MOTOR1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 #endif /* (0 != PWM_MOTOR1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 295:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 PWM_MOTOR1_CONTROL &= ((uint8)(~(PWM_MOTOR1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                             PWM_MOTOR1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 PWM_MOTOR1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 300:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         }
 304:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* PWM_MOTOR1_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 306:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 308:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 310:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 311:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Function Name: PWM_MOTOR1_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 315:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 318:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 322:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Return:
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 8


 323:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 325:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         void PWM_MOTOR1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         {
 328:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #if(0 != PWM_MOTOR1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTOR1_CTRL_CMPMODE1_S
 330:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                            PWM_MOTOR1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 uint8 comparemodemasked = comparemode & PWM_MOTOR1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #endif /* (0 != PWM_MOTOR1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 335:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #if (PWM_MOTOR1_UseControl)
 336:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 PWM_MOTOR1_CONTROL &= ((uint8)(~PWM_MOTOR1_CTRL_CMPMODE1_MASK)); /*Clear existing m
 337:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 PWM_MOTOR1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #endif /* (PWM_MOTOR1_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         }
 340:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* PWM_MOTOR1_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 342:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #if (PWM_MOTOR1_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 344:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 345:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 349:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 352:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 356:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 359:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     void PWM_MOTOR1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 362:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 363:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if(0 != PWM_MOTOR1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTOR1_CTRL_CMPMODE2_SHIFT
 365:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                                  PWM_MOTOR1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             uint8 comparemodemasked = comparemode & PWM_MOTOR1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (0 != PWM_MOTOR1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 370:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if (PWM_MOTOR1_UseControl)
 371:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_CONTROL &= ((uint8)(~PWM_MOTOR1_CTRL_CMPMODE2_MASK)); /*Clear existing mode 
 372:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 375:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /*PWM_MOTOR1_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 377:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 379:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 9


 380:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #if (!PWM_MOTOR1_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 382:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 383:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 387:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 393:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 396:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 399:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 402:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     void PWM_MOTOR1_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         CY_SET_REG8(PWM_MOTOR1_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1870     		strb	r0, [r3]
 407:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 03000F40 		.word	1074724867
  91              		.cfi_endproc
  92              	.LFE6:
  93              		.size	PWM_MOTOR1_WriteCounter, .-PWM_MOTOR1_WriteCounter
  94              		.section	.text.PWM_MOTOR1_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWM_MOTOR1_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWM_MOTOR1_ReadCounter, %function
 100              	PWM_MOTOR1_ReadCounter:
 101              	.LFB7:
 408:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 409:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 410:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 10


 413:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 414:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 418:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 421:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 424:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     uint8 PWM_MOTOR1_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****           (void)CY_GET_REG8(PWM_MOTOR1_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 432:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         return (CY_GET_REG8(PWM_MOTOR1_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1878     		ldrb	r0, [r3]
 110 0008 C0B2     		uxtb	r0, r0
 434:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 13000F40 		.word	1074724883
 118 0010 53000F40 		.word	1074724947
 119              		.cfi_endproc
 120              	.LFE7:
 121              		.size	PWM_MOTOR1_ReadCounter, .-PWM_MOTOR1_ReadCounter
 122              		.section	.text.PWM_MOTOR1_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWM_MOTOR1_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWM_MOTOR1_WritePeriod, %function
 128              	PWM_MOTOR1_WritePeriod:
 129              	.LFB9:
 435:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 436:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 438:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 439:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Function Name: PWM_MOTOR1_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         ********************************************************************************
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 11


 442:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 443:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 446:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 449:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *
 452:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         void PWM_MOTOR1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         {
 455:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             while(0u != (PWM_MOTOR1_ReadStatusRegister() & PWM_MOTOR1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             {
 457:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 (void)PWM_MOTOR1_ReadCapture();
 458:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             }
 459:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         }
 460:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 461:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* PWM_MOTOR1_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 463:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #endif /* !PWM_MOTOR1_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 465:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 466:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Function Name: PWM_MOTOR1_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 470:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 474:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 478:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 481:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** void PWM_MOTOR1_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if(PWM_MOTOR1_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         CY_SET_REG16(PWM_MOTOR1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         CY_SET_REG8(PWM_MOTOR1_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1870     		strb	r0, [r3]
 488:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 43000F40 		.word	1074724931
 143              		.cfi_endproc
 144              	.LFE9:
 145              		.size	PWM_MOTOR1_WritePeriod, .-PWM_MOTOR1_WritePeriod
 146              		.section	.text.PWM_MOTOR1_WriteCompare,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_MOTOR1_WriteCompare
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_MOTOR1_WriteCompare, %function
 152              	PWM_MOTOR1_WriteCompare:
 153              	.LFB10:
 490:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 491:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #if (PWM_MOTOR1_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 493:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 494:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 498:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 505:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 508:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 511:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 515:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     void PWM_MOTOR1_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 154              		.loc 1 518 0
 155              		.cfi_startproc
 156              	.LVL2:
 519:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if(PWM_MOTOR1_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             CY_SET_REG16(PWM_MOTOR1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             CY_SET_REG8(PWM_MOTOR1_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 522 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1870     		strb	r0, [r3]
 523:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 525:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if (PWM_MOTOR1_PWMMode == PWM_MOTOR1__B_PWM__DITHER)
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 13


 526:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #if(PWM_MOTOR1_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 CY_SET_REG16(PWM_MOTOR1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 CY_SET_REG8(PWM_MOTOR1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_PWMMode == PWM_MOTOR1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 160              		.loc 1 532 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 23000F40 		.word	1074724899
 167              		.cfi_endproc
 168              	.LFE10:
 169              		.size	PWM_MOTOR1_WriteCompare, .-PWM_MOTOR1_WriteCompare
 170              		.section	.text.PWM_MOTOR1_SetInterruptMode,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_MOTOR1_SetInterruptMode
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_MOTOR1_SetInterruptMode, %function
 176              	PWM_MOTOR1_SetInterruptMode:
 177              	.LFB11:
 533:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 534:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 535:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #else
 536:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 537:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 538:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 542:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 548:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 551:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 554:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     void PWM_MOTOR1_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 558:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if(PWM_MOTOR1_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             CY_SET_REG16(PWM_MOTOR1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             CY_SET_REG8(PWM_MOTOR1_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 564:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 14


 565:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 566:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 570:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 577:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 580:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 583:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     void PWM_MOTOR1_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 587:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if(PWM_MOTOR1_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             CY_SET_REG16(PWM_MOTOR1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             CY_SET_REG8(PWM_MOTOR1_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 593:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 595:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #if (PWM_MOTOR1_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 597:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 598:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 602:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 605:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 608:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 611:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     void PWM_MOTOR1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 614:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if(!PWM_MOTOR1_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             CY_SET_REG8(PWM_MOTOR1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             PWM_MOTOR1_DEADBAND_COUNT &= ((uint8)(~PWM_MOTOR1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 15


 622:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #if(PWM_MOTOR1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 PWM_MOTOR1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_MOTOR1_DEADBAND_COUNT_
 625:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                                     PWM_MOTOR1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 PWM_MOTOR1_DEADBAND_COUNT |= deadtime & PWM_MOTOR1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #endif /* (PWM_MOTOR1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 630:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (!PWM_MOTOR1_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 632:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 633:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 634:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 638:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 641:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 644:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 647:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     uint8 PWM_MOTOR1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 650:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if(!PWM_MOTOR1_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             return (CY_GET_REG8(PWM_MOTOR1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 655:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #if(PWM_MOTOR1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 return ((uint8)(((uint8)(PWM_MOTOR1_DEADBAND_COUNT & PWM_MOTOR1_DEADBAND_COUNT_MASK
 658:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                                                            PWM_MOTOR1_DEADBAND_COUN
 659:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 return (PWM_MOTOR1_DEADBAND_COUNT & PWM_MOTOR1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             #endif /* (PWM_MOTOR1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (!PWM_MOTOR1_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 664:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 666:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #if (PWM_MOTOR1_UseStatus || PWM_MOTOR1_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 668:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 669:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 673:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 677:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 16


 679:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 680:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 683:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     void PWM_MOTOR1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 178              		.loc 1 685 0
 179              		.cfi_startproc
 180              	.LVL3:
 686:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         CY_SET_REG8(PWM_MOTOR1_STATUS_MASK_PTR, interruptMode);
 181              		.loc 1 686 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 184              		.loc 1 687 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 83000F40 		.word	1074724995
 191              		.cfi_endproc
 192              	.LFE11:
 193              		.size	PWM_MOTOR1_SetInterruptMode, .-PWM_MOTOR1_SetInterruptMode
 194              		.section	.text.PWM_MOTOR1_ReadStatusRegister,"ax",%progbits
 195              		.align	2
 196              		.global	PWM_MOTOR1_ReadStatusRegister
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWM_MOTOR1_ReadStatusRegister, %function
 200              	PWM_MOTOR1_ReadStatusRegister:
 201              	.LFB12:
 688:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 689:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 690:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 694:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 697:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 700:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 710:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     uint8 PWM_MOTOR1_ReadStatusRegister(void) 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 17


 712:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 202              		.loc 1 712 0
 203              		.cfi_startproc
 713:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         return (CY_GET_REG8(PWM_MOTOR1_STATUS_PTR));
 204              		.loc 1 713 0
 205 0000 014B     		ldr	r3, .L23
 206 0002 1878     		ldrb	r0, [r3]
 207 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 208              		.loc 1 714 0
 209              		@ sp needed
 210 0006 7047     		bx	lr
 211              	.L24:
 212              		.align	2
 213              	.L23:
 214 0008 63000F40 		.word	1074724963
 215              		.cfi_endproc
 216              	.LFE12:
 217              		.size	PWM_MOTOR1_ReadStatusRegister, .-PWM_MOTOR1_ReadStatusRegister
 218              		.section	.text.PWM_MOTOR1_ReadControlRegister,"ax",%progbits
 219              		.align	2
 220              		.global	PWM_MOTOR1_ReadControlRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	PWM_MOTOR1_ReadControlRegister, %function
 224              	PWM_MOTOR1_ReadControlRegister:
 225              	.LFB13:
 715:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 716:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #endif /* (PWM_MOTOR1_UseStatus || PWM_MOTOR1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 718:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 719:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #if (PWM_MOTOR1_UseControl)
 720:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 721:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 722:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 726:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 730:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 733:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 736:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     uint8 PWM_MOTOR1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 226              		.loc 1 738 0
 227              		.cfi_startproc
 739:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 741:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         result = CY_GET_REG8(PWM_MOTOR1_CONTROL_PTR);
 228              		.loc 1 741 0
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 18


 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 232              	.LVL4:
 742:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 233              		.loc 1 743 0
 234              		@ sp needed
 235 0006 7047     		bx	lr
 236              	.L27:
 237              		.align	2
 238              	.L26:
 239 0008 73000F40 		.word	1074724979
 240              		.cfi_endproc
 241              	.LFE13:
 242              		.size	PWM_MOTOR1_ReadControlRegister, .-PWM_MOTOR1_ReadControlRegister
 243              		.section	.text.PWM_MOTOR1_WriteControlRegister,"ax",%progbits
 244              		.align	2
 245              		.global	PWM_MOTOR1_WriteControlRegister
 246              		.code	16
 247              		.thumb_func
 248              		.type	PWM_MOTOR1_WriteControlRegister, %function
 249              	PWM_MOTOR1_WriteControlRegister:
 250              	.LFB14:
 744:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 745:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 746:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 750:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 754:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 761:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 764:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     void PWM_MOTOR1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 251              		.loc 1 766 0
 252              		.cfi_startproc
 253              	.LVL5:
 767:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         CY_SET_REG8(PWM_MOTOR1_CONTROL_PTR, control);
 254              		.loc 1 767 0
 255 0000 014B     		ldr	r3, .L29
 256 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 257              		.loc 1 768 0
 258              		@ sp needed
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 19


 259 0004 7047     		bx	lr
 260              	.L30:
 261 0006 C046     		.align	2
 262              	.L29:
 263 0008 73000F40 		.word	1074724979
 264              		.cfi_endproc
 265              	.LFE14:
 266              		.size	PWM_MOTOR1_WriteControlRegister, .-PWM_MOTOR1_WriteControlRegister
 267              		.section	.text.PWM_MOTOR1_ReadCapture,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_MOTOR1_ReadCapture
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWM_MOTOR1_ReadCapture, %function
 273              	PWM_MOTOR1_ReadCapture:
 274              	.LFB15:
 769:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 770:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #endif /* (PWM_MOTOR1_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 772:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 773:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #if (!PWM_MOTOR1_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 775:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 776:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 780:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 783:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 786:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 789:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     uint8 PWM_MOTOR1_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 275              		.loc 1 791 0
 276              		.cfi_startproc
 792:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         return (CY_GET_REG8(PWM_MOTOR1_CAPTURE_LSB_PTR));
 277              		.loc 1 792 0
 278 0000 014B     		ldr	r3, .L32
 279 0002 1878     		ldrb	r0, [r3]
 280 0004 C0B2     		uxtb	r0, r0
 793:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 281              		.loc 1 793 0
 282              		@ sp needed
 283 0006 7047     		bx	lr
 284              	.L33:
 285              		.align	2
 286              	.L32:
 287 0008 53000F40 		.word	1074724947
 288              		.cfi_endproc
 289              	.LFE15:
 290              		.size	PWM_MOTOR1_ReadCapture, .-PWM_MOTOR1_ReadCapture
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 20


 291              		.section	.text.PWM_MOTOR1_ClearFIFO,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_MOTOR1_ClearFIFO
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWM_MOTOR1_ClearFIFO, %function
 297              	PWM_MOTOR1_ClearFIFO:
 298              	.LFB8:
 454:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             while(0u != (PWM_MOTOR1_ReadStatusRegister() & PWM_MOTOR1_STATUS_FIFONEMPTY))
 299              		.loc 1 454 0
 300              		.cfi_startproc
 301 0000 08B5     		push	{r3, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             {
 305              		.loc 1 455 0
 306 0002 01E0     		b	.L35
 307              	.L36:
 457:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             }
 308              		.loc 1 457 0
 309 0004 FFF7FEFF 		bl	PWM_MOTOR1_ReadCapture
 310              	.LVL6:
 311              	.L35:
 455:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             {
 312              		.loc 1 455 0
 313 0008 FFF7FEFF 		bl	PWM_MOTOR1_ReadStatusRegister
 314              	.LVL7:
 315 000c C306     		lsl	r3, r0, #27
 316 000e F9D4     		bmi	.L36
 459:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 317              		.loc 1 459 0
 318              		@ sp needed
 319 0010 08BD     		pop	{r3, pc}
 320              		.cfi_endproc
 321              	.LFE8:
 322              		.size	PWM_MOTOR1_ClearFIFO, .-PWM_MOTOR1_ClearFIFO
 323 0012 C046     		.section	.text.PWM_MOTOR1_Init,"ax",%progbits
 324              		.align	2
 325              		.global	PWM_MOTOR1_Init
 326              		.code	16
 327              		.thumb_func
 328              		.type	PWM_MOTOR1_Init, %function
 329              	PWM_MOTOR1_Init:
 330              	.LFB3:
  85:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if (PWM_MOTOR1_UsingFixedFunction || PWM_MOTOR1_UseControl)
 331              		.loc 1 85 0
 332              		.cfi_startproc
 333 0000 10B5     		push	{r4, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 4, -8
 336              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                 ((uint8)(~PWM_MOTOR1_CTRL_CMPMODE1_MASK));
 337              		.loc 1 117 0
 338 0002 1149     		ldr	r1, .L38
 339 0004 0B78     		ldrb	r3, [r1]
 340 0006 3F22     		mov	r2, #63
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 21


 341 0008 9343     		bic	r3, r2
 342              	.LVL8:
 119:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****                                    PWM_MOTOR1_DEFAULT_COMPARE1_MODE;
 343              		.loc 1 119 0
 344 000a 363A     		sub	r2, r2, #54
 345 000c 1343     		orr	r3, r2
 346              	.LVL9:
 347 000e 0B70     		strb	r3, [r1]
 126:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else /* (PWM_MOTOR1_Resolution == 16)*/
 348              		.loc 1 126 0
 349 0010 0E4C     		ldr	r4, .L38+4
 350 0012 2278     		ldrb	r2, [r4]
 351 0014 0123     		mov	r3, #1
 352 0016 1343     		orr	r3, r2
 353 0018 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (!PWM_MOTOR1_UsingFixedFunction) */
 354              		.loc 1 133 0
 355 001a FF20     		mov	r0, #255
 356 001c FFF7FEFF 		bl	PWM_MOTOR1_WriteCounter
 357              	.LVL10:
 136:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 358              		.loc 1 136 0
 359 0020 FF20     		mov	r0, #255
 360 0022 FFF7FEFF 		bl	PWM_MOTOR1_WritePeriod
 361              	.LVL11:
 139:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else
 362              		.loc 1 139 0
 363 0026 7F20     		mov	r0, #127
 364 0028 FFF7FEFF 		bl	PWM_MOTOR1_WriteCompare
 365              	.LVL12:
 154:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UseStatus || PWM_MOTOR1_UsingFixedFunction) */
 366              		.loc 1 154 0
 367 002c 0020     		mov	r0, #0
 368 002e FFF7FEFF 		bl	PWM_MOTOR1_SetInterruptMode
 369              	.LVL13:
 167:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             /* Use the interrupt output of the status register for IRQ output */
 370              		.loc 1 167 0
 371 0032 FFF7FEFF 		bl	CyEnterCriticalSection
 372              	.LVL14:
 169:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 373              		.loc 1 169 0
 374 0036 2278     		ldrb	r2, [r4]
 375 0038 1023     		mov	r3, #16
 376 003a 1343     		orr	r3, r2
 377 003c 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 378              		.loc 1 172 0
 379 003e FFF7FEFF 		bl	CyExitCriticalSection
 380              	.LVL15:
 176:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_UseStatus) */
 381              		.loc 1 176 0
 382 0042 FFF7FEFF 		bl	PWM_MOTOR1_ClearFIFO
 383              	.LVL16:
 179:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 384              		.loc 1 179 0
 385              		@ sp needed
 386 0046 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 22


 387              	.L39:
 388              		.align	2
 389              	.L38:
 390 0048 73000F40 		.word	1074724979
 391 004c 93000F40 		.word	1074725011
 392              		.cfi_endproc
 393              	.LFE3:
 394              		.size	PWM_MOTOR1_Init, .-PWM_MOTOR1_Init
 395              		.section	.text.PWM_MOTOR1_Start,"ax",%progbits
 396              		.align	2
 397              		.global	PWM_MOTOR1_Start
 398              		.code	16
 399              		.thumb_func
 400              		.type	PWM_MOTOR1_Start, %function
 401              	PWM_MOTOR1_Start:
 402              	.LFB2:
  56:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /* If not Initialized then initialize all required hardware and software */
 403              		.loc 1 56 0
 404              		.cfi_startproc
 405 0000 08B5     		push	{r3, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 409              		.loc 1 58 0
 410 0002 064B     		ldr	r3, .L42
 411 0004 1B78     		ldrb	r3, [r3]
 412 0006 002B     		cmp	r3, #0
 413 0008 04D1     		bne	.L41
  60:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         PWM_MOTOR1_initVar = 1u;
 414              		.loc 1 60 0
 415 000a FFF7FEFF 		bl	PWM_MOTOR1_Init
 416              	.LVL17:
  61:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 417              		.loc 1 61 0
 418 000e 0122     		mov	r2, #1
 419 0010 024B     		ldr	r3, .L42
 420 0012 1A70     		strb	r2, [r3]
 421              	.L41:
  63:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 422              		.loc 1 63 0
 423 0014 FFF7FEFF 		bl	PWM_MOTOR1_Enable
 424              	.LVL18:
  65:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 425              		.loc 1 65 0
 426              		@ sp needed
 427 0018 08BD     		pop	{r3, pc}
 428              	.L43:
 429 001a C046     		.align	2
 430              	.L42:
 431 001c 00000000 		.word	.LANCHOR0
 432              		.cfi_endproc
 433              	.LFE2:
 434              		.size	PWM_MOTOR1_Start, .-PWM_MOTOR1_Start
 435              		.section	.text.PWM_MOTOR1_ReadCompare,"ax",%progbits
 436              		.align	2
 437              		.global	PWM_MOTOR1_ReadCompare
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 23


 438              		.code	16
 439              		.thumb_func
 440              		.type	PWM_MOTOR1_ReadCompare, %function
 441              	PWM_MOTOR1_ReadCompare:
 442              	.LFB16:
 794:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 795:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #endif /* (!PWM_MOTOR1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 797:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 798:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #if (PWM_MOTOR1_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 800:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 801:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 805:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 809:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 812:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 815:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     uint8 PWM_MOTOR1_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 443              		.loc 1 817 0
 444              		.cfi_startproc
 818:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #if(PWM_MOTOR1_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             return ((uint8)CY_GET_REG16(PWM_MOTOR1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****             return (CY_GET_REG8(PWM_MOTOR1_COMPARE1_LSB_PTR));
 445              		.loc 1 821 0
 446 0000 014B     		ldr	r3, .L45
 447 0002 1878     		ldrb	r0, [r3]
 448 0004 C0B2     		uxtb	r0, r0
 822:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 449              		.loc 1 823 0
 450              		@ sp needed
 451 0006 7047     		bx	lr
 452              	.L46:
 453              		.align	2
 454              	.L45:
 455 0008 23000F40 		.word	1074724899
 456              		.cfi_endproc
 457              	.LFE16:
 458              		.size	PWM_MOTOR1_ReadCompare, .-PWM_MOTOR1_ReadCompare
 459              		.section	.text.PWM_MOTOR1_ReadPeriod,"ax",%progbits
 460              		.align	2
 461              		.global	PWM_MOTOR1_ReadPeriod
 462              		.code	16
 463              		.thumb_func
 464              		.type	PWM_MOTOR1_ReadPeriod, %function
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 24


 465              	PWM_MOTOR1_ReadPeriod:
 466              	.LFB17:
 824:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 825:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #else
 826:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 827:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 828:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 832:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 835:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 838:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 841:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     uint8 PWM_MOTOR1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 844:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         return (CY_GET_REG8(PWM_MOTOR1_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 846:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 847:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 848:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Function Name: PWM_MOTOR1_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 852:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 855:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 858:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *
 861:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     uint8 PWM_MOTOR1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     {
 864:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         return (CY_GET_REG8(PWM_MOTOR1_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     }
 866:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 867:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** #endif /* (PWM_MOTOR1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 869:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** 
 870:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Function Name: PWM_MOTOR1_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 874:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 877:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  None
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 25


 879:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 880:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *
 883:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** uint8 PWM_MOTOR1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** {
 467              		.loc 1 885 0
 468              		.cfi_startproc
 886:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #if(PWM_MOTOR1_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         return ((uint8)CY_GET_REG16(PWM_MOTOR1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****         return (CY_GET_REG8(PWM_MOTOR1_PERIOD_LSB_PTR));
 469              		.loc 1 889 0
 470 0000 014B     		ldr	r3, .L48
 471 0002 1878     		ldrb	r0, [r3]
 472 0004 C0B2     		uxtb	r0, r0
 890:.\Generated_Source\PSoC4/PWM_MOTOR1.c ****     #endif /* (PWM_MOTOR1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_MOTOR1.c **** }
 473              		.loc 1 891 0
 474              		@ sp needed
 475 0006 7047     		bx	lr
 476              	.L49:
 477              		.align	2
 478              	.L48:
 479 0008 43000F40 		.word	1074724931
 480              		.cfi_endproc
 481              	.LFE17:
 482              		.size	PWM_MOTOR1_ReadPeriod, .-PWM_MOTOR1_ReadPeriod
 483              		.global	PWM_MOTOR1_initVar
 484              		.bss
 485              		.set	.LANCHOR0,. + 0
 486              		.type	PWM_MOTOR1_initVar, %object
 487              		.size	PWM_MOTOR1_initVar, 1
 488              	PWM_MOTOR1_initVar:
 489 0000 00       		.space	1
 490              		.text
 491              	.Letext0:
 492              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 493              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 494              		.section	.debug_info,"",%progbits
 495              	.Ldebug_info0:
 496 0000 2A030000 		.4byte	0x32a
 497 0004 0400     		.2byte	0x4
 498 0006 00000000 		.4byte	.Ldebug_abbrev0
 499 000a 04       		.byte	0x4
 500 000b 01       		.uleb128 0x1
 501 000c 5F020000 		.4byte	.LASF38
 502 0010 01       		.byte	0x1
 503 0011 49000000 		.4byte	.LASF39
 504 0015 14020000 		.4byte	.LASF40
 505 0019 00000000 		.4byte	.Ldebug_ranges0+0
 506 001d 00000000 		.4byte	0
 507 0021 00000000 		.4byte	.Ldebug_line0
 508 0025 02       		.uleb128 0x2
 509 0026 01       		.byte	0x1
 510 0027 06       		.byte	0x6
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 26


 511 0028 53030000 		.4byte	.LASF0
 512 002c 02       		.uleb128 0x2
 513 002d 01       		.byte	0x1
 514 002e 08       		.byte	0x8
 515 002f 94000000 		.4byte	.LASF1
 516 0033 02       		.uleb128 0x2
 517 0034 02       		.byte	0x2
 518 0035 05       		.byte	0x5
 519 0036 ED020000 		.4byte	.LASF2
 520 003a 02       		.uleb128 0x2
 521 003b 02       		.byte	0x2
 522 003c 07       		.byte	0x7
 523 003d 36000000 		.4byte	.LASF3
 524 0041 02       		.uleb128 0x2
 525 0042 04       		.byte	0x4
 526 0043 05       		.byte	0x5
 527 0044 1C030000 		.4byte	.LASF4
 528 0048 02       		.uleb128 0x2
 529 0049 04       		.byte	0x4
 530 004a 07       		.byte	0x7
 531 004b BE000000 		.4byte	.LASF5
 532 004f 02       		.uleb128 0x2
 533 0050 08       		.byte	0x8
 534 0051 05       		.byte	0x5
 535 0052 06020000 		.4byte	.LASF6
 536 0056 02       		.uleb128 0x2
 537 0057 08       		.byte	0x8
 538 0058 07       		.byte	0x7
 539 0059 7D000000 		.4byte	.LASF7
 540 005d 03       		.uleb128 0x3
 541 005e 04       		.byte	0x4
 542 005f 05       		.byte	0x5
 543 0060 696E7400 		.ascii	"int\000"
 544 0064 02       		.uleb128 0x2
 545 0065 04       		.byte	0x4
 546 0066 07       		.byte	0x7
 547 0067 7E010000 		.4byte	.LASF8
 548 006b 04       		.uleb128 0x4
 549 006c EE000000 		.4byte	.LASF12
 550 0070 02       		.byte	0x2
 551 0071 B3       		.byte	0xb3
 552 0072 2C000000 		.4byte	0x2c
 553 0076 02       		.uleb128 0x2
 554 0077 04       		.byte	0x4
 555 0078 04       		.byte	0x4
 556 0079 6F000000 		.4byte	.LASF9
 557 007d 02       		.uleb128 0x2
 558 007e 08       		.byte	0x8
 559 007f 04       		.byte	0x4
 560 0080 18010000 		.4byte	.LASF10
 561 0084 02       		.uleb128 0x2
 562 0085 01       		.byte	0x1
 563 0086 08       		.byte	0x8
 564 0087 25030000 		.4byte	.LASF11
 565 008b 05       		.uleb128 0x5
 566 008c B9000000 		.4byte	.LASF13
 567 0090 02       		.byte	0x2
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 27


 568 0091 5D01     		.2byte	0x15d
 569 0093 97000000 		.4byte	0x97
 570 0097 06       		.uleb128 0x6
 571 0098 6B000000 		.4byte	0x6b
 572 009c 02       		.uleb128 0x2
 573 009d 04       		.byte	0x4
 574 009e 07       		.byte	0x7
 575 009f FD010000 		.4byte	.LASF14
 576 00a3 07       		.uleb128 0x7
 577 00a4 8F030000 		.4byte	.LASF15
 578 00a8 01       		.byte	0x1
 579 00a9 C7       		.byte	0xc7
 580 00aa 00000000 		.4byte	.LFB4
 581 00ae 10000000 		.4byte	.LFE4-.LFB4
 582 00b2 01       		.uleb128 0x1
 583 00b3 9C       		.byte	0x9c
 584 00b4 07       		.uleb128 0x7
 585 00b5 0C030000 		.4byte	.LASF16
 586 00b9 01       		.byte	0x1
 587 00ba E9       		.byte	0xe9
 588 00bb 00000000 		.4byte	.LFB5
 589 00bf 10000000 		.4byte	.LFE5-.LFB5
 590 00c3 01       		.uleb128 0x1
 591 00c4 9C       		.byte	0x9c
 592 00c5 08       		.uleb128 0x8
 593 00c6 1F010000 		.4byte	.LASF17
 594 00ca 01       		.byte	0x1
 595 00cb 9301     		.2byte	0x193
 596 00cd 00000000 		.4byte	.LFB6
 597 00d1 0C000000 		.4byte	.LFE6-.LFB6
 598 00d5 01       		.uleb128 0x1
 599 00d6 9C       		.byte	0x9c
 600 00d7 EA000000 		.4byte	0xea
 601 00db 09       		.uleb128 0x9
 602 00dc 75000000 		.4byte	.LASF19
 603 00e0 01       		.byte	0x1
 604 00e1 9301     		.2byte	0x193
 605 00e3 6B000000 		.4byte	0x6b
 606 00e7 01       		.uleb128 0x1
 607 00e8 50       		.byte	0x50
 608 00e9 00       		.byte	0
 609 00ea 0A       		.uleb128 0xa
 610 00eb A2000000 		.4byte	.LASF25
 611 00ef 01       		.byte	0x1
 612 00f0 A901     		.2byte	0x1a9
 613 00f2 6B000000 		.4byte	0x6b
 614 00f6 00000000 		.4byte	.LFB7
 615 00fa 14000000 		.4byte	.LFE7-.LFB7
 616 00fe 01       		.uleb128 0x1
 617 00ff 9C       		.byte	0x9c
 618 0100 08       		.uleb128 0x8
 619 0101 E1010000 		.4byte	.LASF18
 620 0105 01       		.byte	0x1
 621 0106 E201     		.2byte	0x1e2
 622 0108 00000000 		.4byte	.LFB9
 623 010c 0C000000 		.4byte	.LFE9-.LFB9
 624 0110 01       		.uleb128 0x1
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 28


 625 0111 9C       		.byte	0x9c
 626 0112 25010000 		.4byte	0x125
 627 0116 09       		.uleb128 0x9
 628 0117 2F000000 		.4byte	.LASF20
 629 011b 01       		.byte	0x1
 630 011c E201     		.2byte	0x1e2
 631 011e 6B000000 		.4byte	0x6b
 632 0122 01       		.uleb128 0x1
 633 0123 50       		.byte	0x50
 634 0124 00       		.byte	0
 635 0125 08       		.uleb128 0x8
 636 0126 17000000 		.4byte	.LASF21
 637 012a 01       		.byte	0x1
 638 012b 0402     		.2byte	0x204
 639 012d 00000000 		.4byte	.LFB10
 640 0131 0C000000 		.4byte	.LFE10-.LFB10
 641 0135 01       		.uleb128 0x1
 642 0136 9C       		.byte	0x9c
 643 0137 4A010000 		.4byte	0x14a
 644 013b 09       		.uleb128 0x9
 645 013c 5F030000 		.4byte	.LASF22
 646 0140 01       		.byte	0x1
 647 0141 0402     		.2byte	0x204
 648 0143 6B000000 		.4byte	0x6b
 649 0147 01       		.uleb128 0x1
 650 0148 50       		.byte	0x50
 651 0149 00       		.byte	0
 652 014a 08       		.uleb128 0x8
 653 014b FC000000 		.4byte	.LASF23
 654 014f 01       		.byte	0x1
 655 0150 AC02     		.2byte	0x2ac
 656 0152 00000000 		.4byte	.LFB11
 657 0156 0C000000 		.4byte	.LFE11-.LFB11
 658 015a 01       		.uleb128 0x1
 659 015b 9C       		.byte	0x9c
 660 015c 6F010000 		.4byte	0x16f
 661 0160 09       		.uleb128 0x9
 662 0161 51020000 		.4byte	.LASF24
 663 0165 01       		.byte	0x1
 664 0166 AC02     		.2byte	0x2ac
 665 0168 6B000000 		.4byte	0x6b
 666 016c 01       		.uleb128 0x1
 667 016d 50       		.byte	0x50
 668 016e 00       		.byte	0
 669 016f 0A       		.uleb128 0xa
 670 0170 D0000000 		.4byte	.LASF26
 671 0174 01       		.byte	0x1
 672 0175 C702     		.2byte	0x2c7
 673 0177 6B000000 		.4byte	0x6b
 674 017b 00000000 		.4byte	.LFB12
 675 017f 0C000000 		.4byte	.LFE12-.LFB12
 676 0183 01       		.uleb128 0x1
 677 0184 9C       		.byte	0x9c
 678 0185 0B       		.uleb128 0xb
 679 0186 8B010000 		.4byte	.LASF41
 680 018a 01       		.byte	0x1
 681 018b E102     		.2byte	0x2e1
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 29


 682 018d 6B000000 		.4byte	0x6b
 683 0191 00000000 		.4byte	.LFB13
 684 0195 0C000000 		.4byte	.LFE13-.LFB13
 685 0199 01       		.uleb128 0x1
 686 019a 9C       		.byte	0x9c
 687 019b AE010000 		.4byte	0x1ae
 688 019f 0C       		.uleb128 0xc
 689 01a0 DA010000 		.4byte	.LASF32
 690 01a4 01       		.byte	0x1
 691 01a5 E302     		.2byte	0x2e3
 692 01a7 6B000000 		.4byte	0x6b
 693 01ab 01       		.uleb128 0x1
 694 01ac 50       		.byte	0x50
 695 01ad 00       		.byte	0
 696 01ae 08       		.uleb128 0x8
 697 01af 37010000 		.4byte	.LASF27
 698 01b3 01       		.byte	0x1
 699 01b4 FD02     		.2byte	0x2fd
 700 01b6 00000000 		.4byte	.LFB14
 701 01ba 0C000000 		.4byte	.LFE14-.LFB14
 702 01be 01       		.uleb128 0x1
 703 01bf 9C       		.byte	0x9c
 704 01c0 D3010000 		.4byte	0x1d3
 705 01c4 09       		.uleb128 0x9
 706 01c5 F4000000 		.4byte	.LASF28
 707 01c9 01       		.byte	0x1
 708 01ca FD02     		.2byte	0x2fd
 709 01cc 6B000000 		.4byte	0x6b
 710 01d0 01       		.uleb128 0x1
 711 01d1 50       		.byte	0x50
 712 01d2 00       		.byte	0
 713 01d3 0A       		.uleb128 0xa
 714 01d4 00000000 		.4byte	.LASF29
 715 01d8 01       		.byte	0x1
 716 01d9 1603     		.2byte	0x316
 717 01db 6B000000 		.4byte	0x6b
 718 01df 00000000 		.4byte	.LFB15
 719 01e3 0C000000 		.4byte	.LFE15-.LFB15
 720 01e7 01       		.uleb128 0x1
 721 01e8 9C       		.byte	0x9c
 722 01e9 08       		.uleb128 0x8
 723 01ea F7020000 		.4byte	.LASF30
 724 01ee 01       		.byte	0x1
 725 01ef C501     		.2byte	0x1c5
 726 01f1 00000000 		.4byte	.LFB8
 727 01f5 12000000 		.4byte	.LFE8-.LFB8
 728 01f9 01       		.uleb128 0x1
 729 01fa 9C       		.byte	0x9c
 730 01fb 12020000 		.4byte	0x212
 731 01ff 0D       		.uleb128 0xd
 732 0200 08000000 		.4byte	.LVL6
 733 0204 D3010000 		.4byte	0x1d3
 734 0208 0D       		.uleb128 0xd
 735 0209 0C000000 		.4byte	.LVL7
 736 020d 6F010000 		.4byte	0x16f
 737 0211 00       		.byte	0
 738 0212 0E       		.uleb128 0xe
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 30


 739 0213 57010000 		.4byte	.LASF31
 740 0217 01       		.byte	0x1
 741 0218 54       		.byte	0x54
 742 0219 00000000 		.4byte	.LFB3
 743 021d 50000000 		.4byte	.LFE3-.LFB3
 744 0221 01       		.uleb128 0x1
 745 0222 9C       		.byte	0x9c
 746 0223 B0020000 		.4byte	0x2b0
 747 0227 0F       		.uleb128 0xf
 748 0228 F8010000 		.4byte	.LASF33
 749 022c 01       		.byte	0x1
 750 022d 57       		.byte	0x57
 751 022e 6B000000 		.4byte	0x6b
 752 0232 00000000 		.4byte	.LLST0
 753 0236 0F       		.uleb128 0xf
 754 0237 C0010000 		.4byte	.LASF34
 755 023b 01       		.byte	0x1
 756 023c 5D       		.byte	0x5d
 757 023d 6B000000 		.4byte	0x6b
 758 0241 13000000 		.4byte	.LLST1
 759 0245 10       		.uleb128 0x10
 760 0246 20000000 		.4byte	.LVL10
 761 024a C5000000 		.4byte	0xc5
 762 024e 59020000 		.4byte	0x259
 763 0252 11       		.uleb128 0x11
 764 0253 01       		.uleb128 0x1
 765 0254 50       		.byte	0x50
 766 0255 02       		.uleb128 0x2
 767 0256 09       		.byte	0x9
 768 0257 FF       		.byte	0xff
 769 0258 00       		.byte	0
 770 0259 10       		.uleb128 0x10
 771 025a 26000000 		.4byte	.LVL11
 772 025e 00010000 		.4byte	0x100
 773 0262 6D020000 		.4byte	0x26d
 774 0266 11       		.uleb128 0x11
 775 0267 01       		.uleb128 0x1
 776 0268 50       		.byte	0x50
 777 0269 02       		.uleb128 0x2
 778 026a 09       		.byte	0x9
 779 026b FF       		.byte	0xff
 780 026c 00       		.byte	0
 781 026d 10       		.uleb128 0x10
 782 026e 2C000000 		.4byte	.LVL12
 783 0272 25010000 		.4byte	0x125
 784 0276 81020000 		.4byte	0x281
 785 027a 11       		.uleb128 0x11
 786 027b 01       		.uleb128 0x1
 787 027c 50       		.byte	0x50
 788 027d 02       		.uleb128 0x2
 789 027e 08       		.byte	0x8
 790 027f 7F       		.byte	0x7f
 791 0280 00       		.byte	0
 792 0281 10       		.uleb128 0x10
 793 0282 32000000 		.4byte	.LVL13
 794 0286 4A010000 		.4byte	0x14a
 795 028a 94020000 		.4byte	0x294
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 31


 796 028e 11       		.uleb128 0x11
 797 028f 01       		.uleb128 0x1
 798 0290 50       		.byte	0x50
 799 0291 01       		.uleb128 0x1
 800 0292 30       		.byte	0x30
 801 0293 00       		.byte	0
 802 0294 0D       		.uleb128 0xd
 803 0295 36000000 		.4byte	.LVL14
 804 0299 15030000 		.4byte	0x315
 805 029d 0D       		.uleb128 0xd
 806 029e 42000000 		.4byte	.LVL15
 807 02a2 20030000 		.4byte	0x320
 808 02a6 0D       		.uleb128 0xd
 809 02a7 46000000 		.4byte	.LVL16
 810 02ab E9010000 		.4byte	0x1e9
 811 02af 00       		.byte	0
 812 02b0 0E       		.uleb128 0xe
 813 02b1 7E030000 		.4byte	.LASF35
 814 02b5 01       		.byte	0x1
 815 02b6 37       		.byte	0x37
 816 02b7 00000000 		.4byte	.LFB2
 817 02bb 20000000 		.4byte	.LFE2-.LFB2
 818 02bf 01       		.uleb128 0x1
 819 02c0 9C       		.byte	0x9c
 820 02c1 D8020000 		.4byte	0x2d8
 821 02c5 0D       		.uleb128 0xd
 822 02c6 0E000000 		.4byte	.LVL17
 823 02ca 12020000 		.4byte	0x212
 824 02ce 0D       		.uleb128 0xd
 825 02cf 18000000 		.4byte	.LVL18
 826 02d3 A3000000 		.4byte	0xa3
 827 02d7 00       		.byte	0
 828 02d8 0A       		.uleb128 0xa
 829 02d9 67030000 		.4byte	.LASF36
 830 02dd 01       		.byte	0x1
 831 02de 3003     		.2byte	0x330
 832 02e0 6B000000 		.4byte	0x6b
 833 02e4 00000000 		.4byte	.LFB16
 834 02e8 0C000000 		.4byte	.LFE16-.LFB16
 835 02ec 01       		.uleb128 0x1
 836 02ed 9C       		.byte	0x9c
 837 02ee 0A       		.uleb128 0xa
 838 02ef 2A030000 		.4byte	.LASF37
 839 02f3 01       		.byte	0x1
 840 02f4 7403     		.2byte	0x374
 841 02f6 6B000000 		.4byte	0x6b
 842 02fa 00000000 		.4byte	.LFB17
 843 02fe 0C000000 		.4byte	.LFE17-.LFB17
 844 0302 01       		.uleb128 0x1
 845 0303 9C       		.byte	0x9c
 846 0304 12       		.uleb128 0x12
 847 0305 40030000 		.4byte	.LASF42
 848 0309 01       		.byte	0x1
 849 030a 20       		.byte	0x20
 850 030b 6B000000 		.4byte	0x6b
 851 030f 05       		.uleb128 0x5
 852 0310 03       		.byte	0x3
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 32


 853 0311 00000000 		.4byte	PWM_MOTOR1_initVar
 854 0315 13       		.uleb128 0x13
 855 0316 67010000 		.4byte	.LASF43
 856 031a 03       		.byte	0x3
 857 031b 5E       		.byte	0x5e
 858 031c 6B000000 		.4byte	0x6b
 859 0320 14       		.uleb128 0x14
 860 0321 AA010000 		.4byte	.LASF44
 861 0325 03       		.byte	0x3
 862 0326 5F       		.byte	0x5f
 863 0327 15       		.uleb128 0x15
 864 0328 6B000000 		.4byte	0x6b
 865 032c 00       		.byte	0
 866 032d 00       		.byte	0
 867              		.section	.debug_abbrev,"",%progbits
 868              	.Ldebug_abbrev0:
 869 0000 01       		.uleb128 0x1
 870 0001 11       		.uleb128 0x11
 871 0002 01       		.byte	0x1
 872 0003 25       		.uleb128 0x25
 873 0004 0E       		.uleb128 0xe
 874 0005 13       		.uleb128 0x13
 875 0006 0B       		.uleb128 0xb
 876 0007 03       		.uleb128 0x3
 877 0008 0E       		.uleb128 0xe
 878 0009 1B       		.uleb128 0x1b
 879 000a 0E       		.uleb128 0xe
 880 000b 55       		.uleb128 0x55
 881 000c 17       		.uleb128 0x17
 882 000d 11       		.uleb128 0x11
 883 000e 01       		.uleb128 0x1
 884 000f 10       		.uleb128 0x10
 885 0010 17       		.uleb128 0x17
 886 0011 00       		.byte	0
 887 0012 00       		.byte	0
 888 0013 02       		.uleb128 0x2
 889 0014 24       		.uleb128 0x24
 890 0015 00       		.byte	0
 891 0016 0B       		.uleb128 0xb
 892 0017 0B       		.uleb128 0xb
 893 0018 3E       		.uleb128 0x3e
 894 0019 0B       		.uleb128 0xb
 895 001a 03       		.uleb128 0x3
 896 001b 0E       		.uleb128 0xe
 897 001c 00       		.byte	0
 898 001d 00       		.byte	0
 899 001e 03       		.uleb128 0x3
 900 001f 24       		.uleb128 0x24
 901 0020 00       		.byte	0
 902 0021 0B       		.uleb128 0xb
 903 0022 0B       		.uleb128 0xb
 904 0023 3E       		.uleb128 0x3e
 905 0024 0B       		.uleb128 0xb
 906 0025 03       		.uleb128 0x3
 907 0026 08       		.uleb128 0x8
 908 0027 00       		.byte	0
 909 0028 00       		.byte	0
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 33


 910 0029 04       		.uleb128 0x4
 911 002a 16       		.uleb128 0x16
 912 002b 00       		.byte	0
 913 002c 03       		.uleb128 0x3
 914 002d 0E       		.uleb128 0xe
 915 002e 3A       		.uleb128 0x3a
 916 002f 0B       		.uleb128 0xb
 917 0030 3B       		.uleb128 0x3b
 918 0031 0B       		.uleb128 0xb
 919 0032 49       		.uleb128 0x49
 920 0033 13       		.uleb128 0x13
 921 0034 00       		.byte	0
 922 0035 00       		.byte	0
 923 0036 05       		.uleb128 0x5
 924 0037 16       		.uleb128 0x16
 925 0038 00       		.byte	0
 926 0039 03       		.uleb128 0x3
 927 003a 0E       		.uleb128 0xe
 928 003b 3A       		.uleb128 0x3a
 929 003c 0B       		.uleb128 0xb
 930 003d 3B       		.uleb128 0x3b
 931 003e 05       		.uleb128 0x5
 932 003f 49       		.uleb128 0x49
 933 0040 13       		.uleb128 0x13
 934 0041 00       		.byte	0
 935 0042 00       		.byte	0
 936 0043 06       		.uleb128 0x6
 937 0044 35       		.uleb128 0x35
 938 0045 00       		.byte	0
 939 0046 49       		.uleb128 0x49
 940 0047 13       		.uleb128 0x13
 941 0048 00       		.byte	0
 942 0049 00       		.byte	0
 943 004a 07       		.uleb128 0x7
 944 004b 2E       		.uleb128 0x2e
 945 004c 00       		.byte	0
 946 004d 3F       		.uleb128 0x3f
 947 004e 19       		.uleb128 0x19
 948 004f 03       		.uleb128 0x3
 949 0050 0E       		.uleb128 0xe
 950 0051 3A       		.uleb128 0x3a
 951 0052 0B       		.uleb128 0xb
 952 0053 3B       		.uleb128 0x3b
 953 0054 0B       		.uleb128 0xb
 954 0055 27       		.uleb128 0x27
 955 0056 19       		.uleb128 0x19
 956 0057 11       		.uleb128 0x11
 957 0058 01       		.uleb128 0x1
 958 0059 12       		.uleb128 0x12
 959 005a 06       		.uleb128 0x6
 960 005b 40       		.uleb128 0x40
 961 005c 18       		.uleb128 0x18
 962 005d 9742     		.uleb128 0x2117
 963 005f 19       		.uleb128 0x19
 964 0060 00       		.byte	0
 965 0061 00       		.byte	0
 966 0062 08       		.uleb128 0x8
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 34


 967 0063 2E       		.uleb128 0x2e
 968 0064 01       		.byte	0x1
 969 0065 3F       		.uleb128 0x3f
 970 0066 19       		.uleb128 0x19
 971 0067 03       		.uleb128 0x3
 972 0068 0E       		.uleb128 0xe
 973 0069 3A       		.uleb128 0x3a
 974 006a 0B       		.uleb128 0xb
 975 006b 3B       		.uleb128 0x3b
 976 006c 05       		.uleb128 0x5
 977 006d 27       		.uleb128 0x27
 978 006e 19       		.uleb128 0x19
 979 006f 11       		.uleb128 0x11
 980 0070 01       		.uleb128 0x1
 981 0071 12       		.uleb128 0x12
 982 0072 06       		.uleb128 0x6
 983 0073 40       		.uleb128 0x40
 984 0074 18       		.uleb128 0x18
 985 0075 9742     		.uleb128 0x2117
 986 0077 19       		.uleb128 0x19
 987 0078 01       		.uleb128 0x1
 988 0079 13       		.uleb128 0x13
 989 007a 00       		.byte	0
 990 007b 00       		.byte	0
 991 007c 09       		.uleb128 0x9
 992 007d 05       		.uleb128 0x5
 993 007e 00       		.byte	0
 994 007f 03       		.uleb128 0x3
 995 0080 0E       		.uleb128 0xe
 996 0081 3A       		.uleb128 0x3a
 997 0082 0B       		.uleb128 0xb
 998 0083 3B       		.uleb128 0x3b
 999 0084 05       		.uleb128 0x5
 1000 0085 49       		.uleb128 0x49
 1001 0086 13       		.uleb128 0x13
 1002 0087 02       		.uleb128 0x2
 1003 0088 18       		.uleb128 0x18
 1004 0089 00       		.byte	0
 1005 008a 00       		.byte	0
 1006 008b 0A       		.uleb128 0xa
 1007 008c 2E       		.uleb128 0x2e
 1008 008d 00       		.byte	0
 1009 008e 3F       		.uleb128 0x3f
 1010 008f 19       		.uleb128 0x19
 1011 0090 03       		.uleb128 0x3
 1012 0091 0E       		.uleb128 0xe
 1013 0092 3A       		.uleb128 0x3a
 1014 0093 0B       		.uleb128 0xb
 1015 0094 3B       		.uleb128 0x3b
 1016 0095 05       		.uleb128 0x5
 1017 0096 27       		.uleb128 0x27
 1018 0097 19       		.uleb128 0x19
 1019 0098 49       		.uleb128 0x49
 1020 0099 13       		.uleb128 0x13
 1021 009a 11       		.uleb128 0x11
 1022 009b 01       		.uleb128 0x1
 1023 009c 12       		.uleb128 0x12
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 35


 1024 009d 06       		.uleb128 0x6
 1025 009e 40       		.uleb128 0x40
 1026 009f 18       		.uleb128 0x18
 1027 00a0 9742     		.uleb128 0x2117
 1028 00a2 19       		.uleb128 0x19
 1029 00a3 00       		.byte	0
 1030 00a4 00       		.byte	0
 1031 00a5 0B       		.uleb128 0xb
 1032 00a6 2E       		.uleb128 0x2e
 1033 00a7 01       		.byte	0x1
 1034 00a8 3F       		.uleb128 0x3f
 1035 00a9 19       		.uleb128 0x19
 1036 00aa 03       		.uleb128 0x3
 1037 00ab 0E       		.uleb128 0xe
 1038 00ac 3A       		.uleb128 0x3a
 1039 00ad 0B       		.uleb128 0xb
 1040 00ae 3B       		.uleb128 0x3b
 1041 00af 05       		.uleb128 0x5
 1042 00b0 27       		.uleb128 0x27
 1043 00b1 19       		.uleb128 0x19
 1044 00b2 49       		.uleb128 0x49
 1045 00b3 13       		.uleb128 0x13
 1046 00b4 11       		.uleb128 0x11
 1047 00b5 01       		.uleb128 0x1
 1048 00b6 12       		.uleb128 0x12
 1049 00b7 06       		.uleb128 0x6
 1050 00b8 40       		.uleb128 0x40
 1051 00b9 18       		.uleb128 0x18
 1052 00ba 9742     		.uleb128 0x2117
 1053 00bc 19       		.uleb128 0x19
 1054 00bd 01       		.uleb128 0x1
 1055 00be 13       		.uleb128 0x13
 1056 00bf 00       		.byte	0
 1057 00c0 00       		.byte	0
 1058 00c1 0C       		.uleb128 0xc
 1059 00c2 34       		.uleb128 0x34
 1060 00c3 00       		.byte	0
 1061 00c4 03       		.uleb128 0x3
 1062 00c5 0E       		.uleb128 0xe
 1063 00c6 3A       		.uleb128 0x3a
 1064 00c7 0B       		.uleb128 0xb
 1065 00c8 3B       		.uleb128 0x3b
 1066 00c9 05       		.uleb128 0x5
 1067 00ca 49       		.uleb128 0x49
 1068 00cb 13       		.uleb128 0x13
 1069 00cc 02       		.uleb128 0x2
 1070 00cd 18       		.uleb128 0x18
 1071 00ce 00       		.byte	0
 1072 00cf 00       		.byte	0
 1073 00d0 0D       		.uleb128 0xd
 1074 00d1 898201   		.uleb128 0x4109
 1075 00d4 00       		.byte	0
 1076 00d5 11       		.uleb128 0x11
 1077 00d6 01       		.uleb128 0x1
 1078 00d7 31       		.uleb128 0x31
 1079 00d8 13       		.uleb128 0x13
 1080 00d9 00       		.byte	0
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 36


 1081 00da 00       		.byte	0
 1082 00db 0E       		.uleb128 0xe
 1083 00dc 2E       		.uleb128 0x2e
 1084 00dd 01       		.byte	0x1
 1085 00de 3F       		.uleb128 0x3f
 1086 00df 19       		.uleb128 0x19
 1087 00e0 03       		.uleb128 0x3
 1088 00e1 0E       		.uleb128 0xe
 1089 00e2 3A       		.uleb128 0x3a
 1090 00e3 0B       		.uleb128 0xb
 1091 00e4 3B       		.uleb128 0x3b
 1092 00e5 0B       		.uleb128 0xb
 1093 00e6 27       		.uleb128 0x27
 1094 00e7 19       		.uleb128 0x19
 1095 00e8 11       		.uleb128 0x11
 1096 00e9 01       		.uleb128 0x1
 1097 00ea 12       		.uleb128 0x12
 1098 00eb 06       		.uleb128 0x6
 1099 00ec 40       		.uleb128 0x40
 1100 00ed 18       		.uleb128 0x18
 1101 00ee 9742     		.uleb128 0x2117
 1102 00f0 19       		.uleb128 0x19
 1103 00f1 01       		.uleb128 0x1
 1104 00f2 13       		.uleb128 0x13
 1105 00f3 00       		.byte	0
 1106 00f4 00       		.byte	0
 1107 00f5 0F       		.uleb128 0xf
 1108 00f6 34       		.uleb128 0x34
 1109 00f7 00       		.byte	0
 1110 00f8 03       		.uleb128 0x3
 1111 00f9 0E       		.uleb128 0xe
 1112 00fa 3A       		.uleb128 0x3a
 1113 00fb 0B       		.uleb128 0xb
 1114 00fc 3B       		.uleb128 0x3b
 1115 00fd 0B       		.uleb128 0xb
 1116 00fe 49       		.uleb128 0x49
 1117 00ff 13       		.uleb128 0x13
 1118 0100 02       		.uleb128 0x2
 1119 0101 17       		.uleb128 0x17
 1120 0102 00       		.byte	0
 1121 0103 00       		.byte	0
 1122 0104 10       		.uleb128 0x10
 1123 0105 898201   		.uleb128 0x4109
 1124 0108 01       		.byte	0x1
 1125 0109 11       		.uleb128 0x11
 1126 010a 01       		.uleb128 0x1
 1127 010b 31       		.uleb128 0x31
 1128 010c 13       		.uleb128 0x13
 1129 010d 01       		.uleb128 0x1
 1130 010e 13       		.uleb128 0x13
 1131 010f 00       		.byte	0
 1132 0110 00       		.byte	0
 1133 0111 11       		.uleb128 0x11
 1134 0112 8A8201   		.uleb128 0x410a
 1135 0115 00       		.byte	0
 1136 0116 02       		.uleb128 0x2
 1137 0117 18       		.uleb128 0x18
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 37


 1138 0118 9142     		.uleb128 0x2111
 1139 011a 18       		.uleb128 0x18
 1140 011b 00       		.byte	0
 1141 011c 00       		.byte	0
 1142 011d 12       		.uleb128 0x12
 1143 011e 34       		.uleb128 0x34
 1144 011f 00       		.byte	0
 1145 0120 03       		.uleb128 0x3
 1146 0121 0E       		.uleb128 0xe
 1147 0122 3A       		.uleb128 0x3a
 1148 0123 0B       		.uleb128 0xb
 1149 0124 3B       		.uleb128 0x3b
 1150 0125 0B       		.uleb128 0xb
 1151 0126 49       		.uleb128 0x49
 1152 0127 13       		.uleb128 0x13
 1153 0128 3F       		.uleb128 0x3f
 1154 0129 19       		.uleb128 0x19
 1155 012a 02       		.uleb128 0x2
 1156 012b 18       		.uleb128 0x18
 1157 012c 00       		.byte	0
 1158 012d 00       		.byte	0
 1159 012e 13       		.uleb128 0x13
 1160 012f 2E       		.uleb128 0x2e
 1161 0130 00       		.byte	0
 1162 0131 3F       		.uleb128 0x3f
 1163 0132 19       		.uleb128 0x19
 1164 0133 03       		.uleb128 0x3
 1165 0134 0E       		.uleb128 0xe
 1166 0135 3A       		.uleb128 0x3a
 1167 0136 0B       		.uleb128 0xb
 1168 0137 3B       		.uleb128 0x3b
 1169 0138 0B       		.uleb128 0xb
 1170 0139 27       		.uleb128 0x27
 1171 013a 19       		.uleb128 0x19
 1172 013b 49       		.uleb128 0x49
 1173 013c 13       		.uleb128 0x13
 1174 013d 3C       		.uleb128 0x3c
 1175 013e 19       		.uleb128 0x19
 1176 013f 00       		.byte	0
 1177 0140 00       		.byte	0
 1178 0141 14       		.uleb128 0x14
 1179 0142 2E       		.uleb128 0x2e
 1180 0143 01       		.byte	0x1
 1181 0144 3F       		.uleb128 0x3f
 1182 0145 19       		.uleb128 0x19
 1183 0146 03       		.uleb128 0x3
 1184 0147 0E       		.uleb128 0xe
 1185 0148 3A       		.uleb128 0x3a
 1186 0149 0B       		.uleb128 0xb
 1187 014a 3B       		.uleb128 0x3b
 1188 014b 0B       		.uleb128 0xb
 1189 014c 27       		.uleb128 0x27
 1190 014d 19       		.uleb128 0x19
 1191 014e 3C       		.uleb128 0x3c
 1192 014f 19       		.uleb128 0x19
 1193 0150 00       		.byte	0
 1194 0151 00       		.byte	0
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 38


 1195 0152 15       		.uleb128 0x15
 1196 0153 05       		.uleb128 0x5
 1197 0154 00       		.byte	0
 1198 0155 49       		.uleb128 0x49
 1199 0156 13       		.uleb128 0x13
 1200 0157 00       		.byte	0
 1201 0158 00       		.byte	0
 1202 0159 00       		.byte	0
 1203              		.section	.debug_loc,"",%progbits
 1204              	.Ldebug_loc0:
 1205              	.LLST0:
 1206 0000 0A000000 		.4byte	.LVL8
 1207 0004 0E000000 		.4byte	.LVL9
 1208 0008 0100     		.2byte	0x1
 1209 000a 53       		.byte	0x53
 1210 000b 00000000 		.4byte	0
 1211 000f 00000000 		.4byte	0
 1212              	.LLST1:
 1213 0013 36000000 		.4byte	.LVL14
 1214 0017 41000000 		.4byte	.LVL15-1
 1215 001b 0100     		.2byte	0x1
 1216 001d 50       		.byte	0x50
 1217 001e 00000000 		.4byte	0
 1218 0022 00000000 		.4byte	0
 1219              		.section	.debug_aranges,"",%progbits
 1220 0000 94000000 		.4byte	0x94
 1221 0004 0200     		.2byte	0x2
 1222 0006 00000000 		.4byte	.Ldebug_info0
 1223 000a 04       		.byte	0x4
 1224 000b 00       		.byte	0
 1225 000c 0000     		.2byte	0
 1226 000e 0000     		.2byte	0
 1227 0010 00000000 		.4byte	.LFB4
 1228 0014 10000000 		.4byte	.LFE4-.LFB4
 1229 0018 00000000 		.4byte	.LFB5
 1230 001c 10000000 		.4byte	.LFE5-.LFB5
 1231 0020 00000000 		.4byte	.LFB6
 1232 0024 0C000000 		.4byte	.LFE6-.LFB6
 1233 0028 00000000 		.4byte	.LFB7
 1234 002c 14000000 		.4byte	.LFE7-.LFB7
 1235 0030 00000000 		.4byte	.LFB9
 1236 0034 0C000000 		.4byte	.LFE9-.LFB9
 1237 0038 00000000 		.4byte	.LFB10
 1238 003c 0C000000 		.4byte	.LFE10-.LFB10
 1239 0040 00000000 		.4byte	.LFB11
 1240 0044 0C000000 		.4byte	.LFE11-.LFB11
 1241 0048 00000000 		.4byte	.LFB12
 1242 004c 0C000000 		.4byte	.LFE12-.LFB12
 1243 0050 00000000 		.4byte	.LFB13
 1244 0054 0C000000 		.4byte	.LFE13-.LFB13
 1245 0058 00000000 		.4byte	.LFB14
 1246 005c 0C000000 		.4byte	.LFE14-.LFB14
 1247 0060 00000000 		.4byte	.LFB15
 1248 0064 0C000000 		.4byte	.LFE15-.LFB15
 1249 0068 00000000 		.4byte	.LFB8
 1250 006c 12000000 		.4byte	.LFE8-.LFB8
 1251 0070 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 39


 1252 0074 50000000 		.4byte	.LFE3-.LFB3
 1253 0078 00000000 		.4byte	.LFB2
 1254 007c 20000000 		.4byte	.LFE2-.LFB2
 1255 0080 00000000 		.4byte	.LFB16
 1256 0084 0C000000 		.4byte	.LFE16-.LFB16
 1257 0088 00000000 		.4byte	.LFB17
 1258 008c 0C000000 		.4byte	.LFE17-.LFB17
 1259 0090 00000000 		.4byte	0
 1260 0094 00000000 		.4byte	0
 1261              		.section	.debug_ranges,"",%progbits
 1262              	.Ldebug_ranges0:
 1263 0000 00000000 		.4byte	.LFB4
 1264 0004 10000000 		.4byte	.LFE4
 1265 0008 00000000 		.4byte	.LFB5
 1266 000c 10000000 		.4byte	.LFE5
 1267 0010 00000000 		.4byte	.LFB6
 1268 0014 0C000000 		.4byte	.LFE6
 1269 0018 00000000 		.4byte	.LFB7
 1270 001c 14000000 		.4byte	.LFE7
 1271 0020 00000000 		.4byte	.LFB9
 1272 0024 0C000000 		.4byte	.LFE9
 1273 0028 00000000 		.4byte	.LFB10
 1274 002c 0C000000 		.4byte	.LFE10
 1275 0030 00000000 		.4byte	.LFB11
 1276 0034 0C000000 		.4byte	.LFE11
 1277 0038 00000000 		.4byte	.LFB12
 1278 003c 0C000000 		.4byte	.LFE12
 1279 0040 00000000 		.4byte	.LFB13
 1280 0044 0C000000 		.4byte	.LFE13
 1281 0048 00000000 		.4byte	.LFB14
 1282 004c 0C000000 		.4byte	.LFE14
 1283 0050 00000000 		.4byte	.LFB15
 1284 0054 0C000000 		.4byte	.LFE15
 1285 0058 00000000 		.4byte	.LFB8
 1286 005c 12000000 		.4byte	.LFE8
 1287 0060 00000000 		.4byte	.LFB3
 1288 0064 50000000 		.4byte	.LFE3
 1289 0068 00000000 		.4byte	.LFB2
 1290 006c 20000000 		.4byte	.LFE2
 1291 0070 00000000 		.4byte	.LFB16
 1292 0074 0C000000 		.4byte	.LFE16
 1293 0078 00000000 		.4byte	.LFB17
 1294 007c 0C000000 		.4byte	.LFE17
 1295 0080 00000000 		.4byte	0
 1296 0084 00000000 		.4byte	0
 1297              		.section	.debug_line,"",%progbits
 1298              	.Ldebug_line0:
 1299 0000 93010000 		.section	.debug_str,"MS",%progbits,1
 1299      02005400 
 1299      00000201 
 1299      FB0E0D00 
 1299      01010101 
 1300              	.LASF29:
 1301 0000 50574D5F 		.ascii	"PWM_MOTOR1_ReadCapture\000"
 1301      4D4F544F 
 1301      52315F52 
 1301      65616443 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 40


 1301      61707475 
 1302              	.LASF21:
 1303 0017 50574D5F 		.ascii	"PWM_MOTOR1_WriteCompare\000"
 1303      4D4F544F 
 1303      52315F57 
 1303      72697465 
 1303      436F6D70 
 1304              	.LASF20:
 1305 002f 70657269 		.ascii	"period\000"
 1305      6F6400
 1306              	.LASF3:
 1307 0036 73686F72 		.ascii	"short unsigned int\000"
 1307      7420756E 
 1307      7369676E 
 1307      65642069 
 1307      6E7400
 1308              	.LASF39:
 1309 0049 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_MOTOR1.c\000"
 1309      6E657261 
 1309      7465645F 
 1309      536F7572 
 1309      63655C50 
 1310              	.LASF9:
 1311 006f 666C6F61 		.ascii	"float\000"
 1311      7400
 1312              	.LASF19:
 1313 0075 636F756E 		.ascii	"counter\000"
 1313      74657200 
 1314              	.LASF7:
 1315 007d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1315      206C6F6E 
 1315      6720756E 
 1315      7369676E 
 1315      65642069 
 1316              	.LASF1:
 1317 0094 756E7369 		.ascii	"unsigned char\000"
 1317      676E6564 
 1317      20636861 
 1317      7200
 1318              	.LASF25:
 1319 00a2 50574D5F 		.ascii	"PWM_MOTOR1_ReadCounter\000"
 1319      4D4F544F 
 1319      52315F52 
 1319      65616443 
 1319      6F756E74 
 1320              	.LASF13:
 1321 00b9 72656738 		.ascii	"reg8\000"
 1321      00
 1322              	.LASF5:
 1323 00be 6C6F6E67 		.ascii	"long unsigned int\000"
 1323      20756E73 
 1323      69676E65 
 1323      6420696E 
 1323      7400
 1324              	.LASF26:
 1325 00d0 50574D5F 		.ascii	"PWM_MOTOR1_ReadStatusRegister\000"
 1325      4D4F544F 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 41


 1325      52315F52 
 1325      65616453 
 1325      74617475 
 1326              	.LASF12:
 1327 00ee 75696E74 		.ascii	"uint8\000"
 1327      3800
 1328              	.LASF28:
 1329 00f4 636F6E74 		.ascii	"control\000"
 1329      726F6C00 
 1330              	.LASF23:
 1331 00fc 50574D5F 		.ascii	"PWM_MOTOR1_SetInterruptMode\000"
 1331      4D4F544F 
 1331      52315F53 
 1331      6574496E 
 1331      74657272 
 1332              	.LASF10:
 1333 0118 646F7562 		.ascii	"double\000"
 1333      6C6500
 1334              	.LASF17:
 1335 011f 50574D5F 		.ascii	"PWM_MOTOR1_WriteCounter\000"
 1335      4D4F544F 
 1335      52315F57 
 1335      72697465 
 1335      436F756E 
 1336              	.LASF27:
 1337 0137 50574D5F 		.ascii	"PWM_MOTOR1_WriteControlRegister\000"
 1337      4D4F544F 
 1337      52315F57 
 1337      72697465 
 1337      436F6E74 
 1338              	.LASF31:
 1339 0157 50574D5F 		.ascii	"PWM_MOTOR1_Init\000"
 1339      4D4F544F 
 1339      52315F49 
 1339      6E697400 
 1340              	.LASF43:
 1341 0167 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1341      74657243 
 1341      72697469 
 1341      63616C53 
 1341      65637469 
 1342              	.LASF8:
 1343 017e 756E7369 		.ascii	"unsigned int\000"
 1343      676E6564 
 1343      20696E74 
 1343      00
 1344              	.LASF41:
 1345 018b 50574D5F 		.ascii	"PWM_MOTOR1_ReadControlRegister\000"
 1345      4D4F544F 
 1345      52315F52 
 1345      65616443 
 1345      6F6E7472 
 1346              	.LASF44:
 1347 01aa 43794578 		.ascii	"CyExitCriticalSection\000"
 1347      69744372 
 1347      69746963 
 1347      616C5365 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 42


 1347      6374696F 
 1348              	.LASF34:
 1349 01c0 50574D5F 		.ascii	"PWM_MOTOR1_interruptState\000"
 1349      4D4F544F 
 1349      52315F69 
 1349      6E746572 
 1349      72757074 
 1350              	.LASF32:
 1351 01da 72657375 		.ascii	"result\000"
 1351      6C7400
 1352              	.LASF18:
 1353 01e1 50574D5F 		.ascii	"PWM_MOTOR1_WritePeriod\000"
 1353      4D4F544F 
 1353      52315F57 
 1353      72697465 
 1353      50657269 
 1354              	.LASF33:
 1355 01f8 6374726C 		.ascii	"ctrl\000"
 1355      00
 1356              	.LASF14:
 1357 01fd 73697A65 		.ascii	"sizetype\000"
 1357      74797065 
 1357      00
 1358              	.LASF6:
 1359 0206 6C6F6E67 		.ascii	"long long int\000"
 1359      206C6F6E 
 1359      6720696E 
 1359      7400
 1360              	.LASF40:
 1361 0214 433A5C55 		.ascii	"C:\\Users\\MCisek\\Documents\\balancing_robot\\Proj"
 1361      73657273 
 1361      5C4D4369 
 1361      73656B5C 
 1361      446F6375 
 1362 0242 65637431 		.ascii	"ect1_acc.cydsn\000"
 1362      5F616363 
 1362      2E637964 
 1362      736E00
 1363              	.LASF24:
 1364 0251 696E7465 		.ascii	"interruptMode\000"
 1364      72727570 
 1364      744D6F64 
 1364      6500
 1365              	.LASF38:
 1366 025f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1366      4320342E 
 1366      392E3320 
 1366      32303135 
 1366      30333033 
 1367 0292 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1367      20726576 
 1367      6973696F 
 1367      6E203232 
 1367      31323230 
 1368 02c5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1368      66756E63 
 1368      74696F6E 
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 43


 1368      2D736563 
 1368      74696F6E 
 1369              	.LASF2:
 1370 02ed 73686F72 		.ascii	"short int\000"
 1370      7420696E 
 1370      7400
 1371              	.LASF30:
 1372 02f7 50574D5F 		.ascii	"PWM_MOTOR1_ClearFIFO\000"
 1372      4D4F544F 
 1372      52315F43 
 1372      6C656172 
 1372      4649464F 
 1373              	.LASF16:
 1374 030c 50574D5F 		.ascii	"PWM_MOTOR1_Stop\000"
 1374      4D4F544F 
 1374      52315F53 
 1374      746F7000 
 1375              	.LASF4:
 1376 031c 6C6F6E67 		.ascii	"long int\000"
 1376      20696E74 
 1376      00
 1377              	.LASF11:
 1378 0325 63686172 		.ascii	"char\000"
 1378      00
 1379              	.LASF37:
 1380 032a 50574D5F 		.ascii	"PWM_MOTOR1_ReadPeriod\000"
 1380      4D4F544F 
 1380      52315F52 
 1380      65616450 
 1380      6572696F 
 1381              	.LASF42:
 1382 0340 50574D5F 		.ascii	"PWM_MOTOR1_initVar\000"
 1382      4D4F544F 
 1382      52315F69 
 1382      6E697456 
 1382      617200
 1383              	.LASF0:
 1384 0353 7369676E 		.ascii	"signed char\000"
 1384      65642063 
 1384      68617200 
 1385              	.LASF22:
 1386 035f 636F6D70 		.ascii	"compare\000"
 1386      61726500 
 1387              	.LASF36:
 1388 0367 50574D5F 		.ascii	"PWM_MOTOR1_ReadCompare\000"
 1388      4D4F544F 
 1388      52315F52 
 1388      65616443 
 1388      6F6D7061 
 1389              	.LASF35:
 1390 037e 50574D5F 		.ascii	"PWM_MOTOR1_Start\000"
 1390      4D4F544F 
 1390      52315F53 
 1390      74617274 
 1390      00
 1391              	.LASF15:
 1392 038f 50574D5F 		.ascii	"PWM_MOTOR1_Enable\000"
ARM GAS  C:\Users\MCisek\AppData\Local\Temp\ccNIMNim.s 			page 44


 1392      4D4F544F 
 1392      52315F45 
 1392      6E61626C 
 1392      6500
 1393              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
